[2020-04-02 14:31:52,710] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-02 14:32:12,565] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-02 14:32:12,580] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2020-04-02 14:32:12,580] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2020-04-02 14:32:12,583] INFO [Controller id=0] Initialized controller epoch to 2 and zk version 1 (kafka.controller.KafkaController)
[2020-04-02 14:32:12,583] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2020-04-02 14:32:12,595] INFO [Controller id=0] Epoch incremented to 3 (kafka.controller.KafkaController)
[2020-04-02 14:32:12,595] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-02 14:32:12,599] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-02 14:32:12,604] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-02 14:32:12,608] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-02 14:32:12,681] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-02 14:32:12,719] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-02 14:32:12,732] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-02 14:32:12,734] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-04-02 14:32:12,735] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-04-02 14:32:12,735] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-02 14:32:12,736] INFO [Controller id=0] Current list of topics in the cluster: Set(getStudentAllEducation, deleteProfessionalExperience, updateCompanyProfile, listCompanyCreatedEvents, createProfessionalExperience, registerForEvent, applyForJob, getSearchedEvent, getRegisteredEvents, getAllConversationsOfAUser, getStudentInfo, response_topic, passport, listCompanyPostedJobs, createEducation, getAppliedJobs, deleteEducation, getAllMessageOFAConversation, updateProfessionalExperience, createEvent, updateAppliedStudentJobStatus, addMessageInAConversation, updateSkills, searchStudents, signup, login, getStudentsRegisteredInAEvent, getCompanyInfo, getPostedJobs, updateEducation, createJobPost, updateStudentProfile) (kafka.controller.KafkaController)
[2020-04-02 14:32:12,737] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-02 14:32:12,749] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-02 14:32:12,749] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-02 14:32:12,750] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-02 14:32:12,751] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-02 14:32:12,783] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2020-04-02 14:32:12,797] INFO [RequestSendThread controllerId=0] Controller 0 connected to sarthaks-mbp.lan:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-02 14:32:12,802] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2020-04-02 14:32:12,851] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=registerForEvent,Partition=0,Replica=0] -> OnlineReplica, [Topic=getCompanyInfo,Partition=0,Replica=0] -> OnlineReplica, [Topic=updateProfessionalExperience,Partition=0,Replica=0] -> OnlineReplica, [Topic=getStudentInfo,Partition=0,Replica=0] -> OnlineReplica, [Topic=addMessageInAConversation,Partition=0,Replica=0] -> OnlineReplica, [Topic=applyForJob,Partition=0,Replica=0] -> OnlineReplica, [Topic=createEducation,Partition=0,Replica=0] -> OnlineReplica, [Topic=deleteProfessionalExperience,Partition=0,Replica=0] -> OnlineReplica, [Topic=login,Partition=0,Replica=0] -> OnlineReplica, [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] -> OnlineReplica, [Topic=signup,Partition=0,Replica=0] -> OnlineReplica, [Topic=updateEducation,Partition=0,Replica=0] -> OnlineReplica, [Topic=getRegisteredEvents,Partition=0,Replica=0] -> OnlineReplica, [Topic=listCompanyPostedJobs,Partition=0,Replica=0] -> OnlineReplica, [Topic=deleteEducation,Partition=0,Replica=0] -> OnlineReplica, [Topic=createEvent,Partition=0,Replica=0] -> OnlineReplica, [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] -> OnlineReplica, [Topic=updateSkills,Partition=0,Replica=0] -> OnlineReplica, [Topic=getPostedJobs,Partition=0,Replica=0] -> OnlineReplica, [Topic=updateCompanyProfile,Partition=0,Replica=0] -> OnlineReplica, [Topic=getAppliedJobs,Partition=0,Replica=0] -> OnlineReplica, [Topic=getSearchedEvent,Partition=0,Replica=0] -> OnlineReplica, [Topic=updateStudentProfile,Partition=0,Replica=0] -> OnlineReplica, [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] -> OnlineReplica, [Topic=response_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=createJobPost,Partition=0,Replica=0] -> OnlineReplica, [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] -> OnlineReplica, [Topic=passport,Partition=0,Replica=0] -> OnlineReplica, [Topic=getStudentAllEducation,Partition=0,Replica=0] -> OnlineReplica, [Topic=createProfessionalExperience,Partition=0,Replica=0] -> OnlineReplica, [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] -> OnlineReplica, [Topic=searchStudents,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2020-04-02 14:32:12,852] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2020-04-02 14:32:12,856] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2020-04-02 14:32:12,858] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(getAppliedJobs-0 -> OnlinePartition, createJobPost-0 -> OnlinePartition, updateEducation-0 -> OnlinePartition, deleteProfessionalExperience-0 -> OnlinePartition, listCompanyCreatedEvents-0 -> OnlinePartition, getRegisteredEvents-0 -> OnlinePartition, registerForEvent-0 -> OnlinePartition, getPostedJobs-0 -> OnlinePartition, getAllConversationsOfAUser-0 -> OnlinePartition, deleteEducation-0 -> OnlinePartition, searchStudents-0 -> OnlinePartition, getSearchedEvent-0 -> OnlinePartition, updateSkills-0 -> OnlinePartition, createEducation-0 -> OnlinePartition, createEvent-0 -> OnlinePartition, getAllMessageOFAConversation-0 -> OnlinePartition, passport-0 -> OnlinePartition, signup-0 -> OnlinePartition, updateCompanyProfile-0 -> OnlinePartition, listCompanyPostedJobs-0 -> OnlinePartition, createProfessionalExperience-0 -> OnlinePartition, getStudentInfo-0 -> OnlinePartition, applyForJob-0 -> OnlinePartition, login-0 -> OnlinePartition, addMessageInAConversation-0 -> OnlinePartition, updateAppliedStudentJobStatus-0 -> OnlinePartition, updateStudentProfile-0 -> OnlinePartition, getStudentsRegisteredInAEvent-0 -> OnlinePartition, getStudentAllEducation-0 -> OnlinePartition, response_topic-0 -> OnlinePartition, updateProfessionalExperience-0 -> OnlinePartition, getCompanyInfo-0 -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2020-04-02 14:32:12,858] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2020-04-02 14:32:12,883] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-02 14:32:12,884] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-02 14:32:12,885] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-02 14:32:12,886] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-02 14:32:12,890] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-04-02 14:32:12,904] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-02 14:32:17,909] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-02 14:32:17,912] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(getAppliedJobs-0 -> Vector(0), createJobPost-0 -> Vector(0), updateEducation-0 -> Vector(0), deleteProfessionalExperience-0 -> Vector(0), listCompanyCreatedEvents-0 -> Vector(0), getRegisteredEvents-0 -> Vector(0), registerForEvent-0 -> Vector(0), getPostedJobs-0 -> Vector(0), getAllConversationsOfAUser-0 -> Vector(0), deleteEducation-0 -> Vector(0), searchStudents-0 -> Vector(0), getSearchedEvent-0 -> Vector(0), updateSkills-0 -> Vector(0), createEducation-0 -> Vector(0), createEvent-0 -> Vector(0), getAllMessageOFAConversation-0 -> Vector(0), passport-0 -> Vector(0), signup-0 -> Vector(0), updateCompanyProfile-0 -> Vector(0), listCompanyPostedJobs-0 -> Vector(0), createProfessionalExperience-0 -> Vector(0), getStudentInfo-0 -> Vector(0), applyForJob-0 -> Vector(0), login-0 -> Vector(0), addMessageInAConversation-0 -> Vector(0), updateAppliedStudentJobStatus-0 -> Vector(0), updateStudentProfile-0 -> Vector(0), getStudentsRegisteredInAEvent-0 -> Vector(0), getStudentAllEducation-0 -> Vector(0), response_topic-0 -> Vector(0), updateProfessionalExperience-0 -> Vector(0), getCompanyInfo-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-02 14:32:17,914] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-02 14:32:17,914] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-02 14:37:17,926] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-02 14:37:17,927] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(getAppliedJobs-0 -> Vector(0), createJobPost-0 -> Vector(0), updateEducation-0 -> Vector(0), deleteProfessionalExperience-0 -> Vector(0), listCompanyCreatedEvents-0 -> Vector(0), getRegisteredEvents-0 -> Vector(0), registerForEvent-0 -> Vector(0), getPostedJobs-0 -> Vector(0), getAllConversationsOfAUser-0 -> Vector(0), deleteEducation-0 -> Vector(0), searchStudents-0 -> Vector(0), getSearchedEvent-0 -> Vector(0), updateSkills-0 -> Vector(0), createEducation-0 -> Vector(0), createEvent-0 -> Vector(0), getAllMessageOFAConversation-0 -> Vector(0), passport-0 -> Vector(0), signup-0 -> Vector(0), updateCompanyProfile-0 -> Vector(0), listCompanyPostedJobs-0 -> Vector(0), createProfessionalExperience-0 -> Vector(0), getStudentInfo-0 -> Vector(0), applyForJob-0 -> Vector(0), login-0 -> Vector(0), addMessageInAConversation-0 -> Vector(0), updateAppliedStudentJobStatus-0 -> Vector(0), updateStudentProfile-0 -> Vector(0), getStudentsRegisteredInAEvent-0 -> Vector(0), getStudentAllEducation-0 -> Vector(0), response_topic-0 -> Vector(0), updateProfessionalExperience-0 -> Vector(0), getCompanyInfo-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-02 14:37:17,927] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-02 14:37:17,927] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-02 14:42:17,937] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-02 14:42:17,938] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(getAppliedJobs-0 -> Vector(0), createJobPost-0 -> Vector(0), updateEducation-0 -> Vector(0), deleteProfessionalExperience-0 -> Vector(0), listCompanyCreatedEvents-0 -> Vector(0), getRegisteredEvents-0 -> Vector(0), registerForEvent-0 -> Vector(0), getPostedJobs-0 -> Vector(0), getAllConversationsOfAUser-0 -> Vector(0), deleteEducation-0 -> Vector(0), searchStudents-0 -> Vector(0), getSearchedEvent-0 -> Vector(0), updateSkills-0 -> Vector(0), createEducation-0 -> Vector(0), createEvent-0 -> Vector(0), getAllMessageOFAConversation-0 -> Vector(0), passport-0 -> Vector(0), signup-0 -> Vector(0), updateCompanyProfile-0 -> Vector(0), listCompanyPostedJobs-0 -> Vector(0), createProfessionalExperience-0 -> Vector(0), getStudentInfo-0 -> Vector(0), applyForJob-0 -> Vector(0), login-0 -> Vector(0), addMessageInAConversation-0 -> Vector(0), updateAppliedStudentJobStatus-0 -> Vector(0), updateStudentProfile-0 -> Vector(0), getStudentsRegisteredInAEvent-0 -> Vector(0), getStudentAllEducation-0 -> Vector(0), response_topic-0 -> Vector(0), updateProfessionalExperience-0 -> Vector(0), getCompanyInfo-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-02 14:42:17,939] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-02 14:42:17,939] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-02 14:43:39,546] DEBUG [Controller id=0] Delete topics listener fired for topics addMessageInAConversation to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:43:39,547] INFO [Controller id=0] Starting topic deletion for topics addMessageInAConversation (kafka.controller.KafkaController)
[2020-04-02 14:43:39,550] INFO [Topic Deletion Manager 0], Handling deletion for topics addMessageInAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:39,555] INFO [Topic Deletion Manager 0], Deletion of topic addMessageInAConversation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:39,557] INFO [Topic Deletion Manager 0], Topic deletion callback for addMessageInAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:39,560] INFO [Topic Deletion Manager 0], Partition deletion callback for addMessageInAConversation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:39,564] INFO [RequestSendThread controllerId=0] Controller 0 connected to sarthaks-mbp.lan:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-02 14:43:39,585] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:39,585] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:39,588] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:39,590] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:39,590] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:39,635] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@56684845 (kafka.controller.KafkaController)
[2020-04-02 14:43:39,640] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:39,641] INFO [Topic Deletion Manager 0], Handling deletion for topics addMessageInAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:39,666] INFO [Topic Deletion Manager 0], Deletion of topic addMessageInAConversation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:39,669] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:43:39,672] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:43:39,726] INFO [Controller id=0] New topics: [Set(addMessageInAConversation)], deleted topics: [Set()], new partition replica assignment [Map(addMessageInAConversation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:43:39,727] INFO [Controller id=0] New partition creation callback for addMessageInAConversation-0 (kafka.controller.KafkaController)
[2020-04-02 14:43:43,437] DEBUG [Controller id=0] Delete topics listener fired for topics applyForJob to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:43:43,438] INFO [Controller id=0] Starting topic deletion for topics applyForJob (kafka.controller.KafkaController)
[2020-04-02 14:43:43,438] INFO [Topic Deletion Manager 0], Handling deletion for topics applyForJob (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:43,438] INFO [Topic Deletion Manager 0], Deletion of topic applyForJob (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:43,438] INFO [Topic Deletion Manager 0], Topic deletion callback for applyForJob (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:43,439] INFO [Topic Deletion Manager 0], Partition deletion callback for applyForJob-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:43,442] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:43,442] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:43,442] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:43,443] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:43,443] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:43,467] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@5fa55ed2 (kafka.controller.KafkaController)
[2020-04-02 14:43:43,467] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:43,467] INFO [Topic Deletion Manager 0], Handling deletion for topics applyForJob (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:43,475] INFO [Topic Deletion Manager 0], Deletion of topic applyForJob successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:43,477] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:43:43,480] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:43:43,484] INFO [Controller id=0] New topics: [Set(applyForJob)], deleted topics: [Set()], new partition replica assignment [Map(applyForJob-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:43:43,484] INFO [Controller id=0] New partition creation callback for applyForJob-0 (kafka.controller.KafkaController)
[2020-04-02 14:43:46,511] DEBUG [Controller id=0] Delete topics listener fired for topics createEducation to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:43:46,512] INFO [Controller id=0] Starting topic deletion for topics createEducation (kafka.controller.KafkaController)
[2020-04-02 14:43:46,512] INFO [Topic Deletion Manager 0], Handling deletion for topics createEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:46,512] INFO [Topic Deletion Manager 0], Deletion of topic createEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:46,512] INFO [Topic Deletion Manager 0], Topic deletion callback for createEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:46,513] INFO [Topic Deletion Manager 0], Partition deletion callback for createEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:46,517] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:46,517] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:46,517] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:46,518] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:46,518] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:46,537] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@3c49e9f (kafka.controller.KafkaController)
[2020-04-02 14:43:46,537] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:46,538] INFO [Topic Deletion Manager 0], Handling deletion for topics createEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:46,551] INFO [Topic Deletion Manager 0], Deletion of topic createEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:46,552] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:43:46,554] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:43:46,577] INFO [Controller id=0] New topics: [Set(createEducation)], deleted topics: [Set()], new partition replica assignment [Map(createEducation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:43:46,578] INFO [Controller id=0] New partition creation callback for createEducation-0 (kafka.controller.KafkaController)
[2020-04-02 14:43:49,574] DEBUG [Controller id=0] Delete topics listener fired for topics createEvent to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:43:49,574] INFO [Controller id=0] Starting topic deletion for topics createEvent (kafka.controller.KafkaController)
[2020-04-02 14:43:49,574] INFO [Topic Deletion Manager 0], Handling deletion for topics createEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:49,574] INFO [Topic Deletion Manager 0], Deletion of topic createEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:49,574] INFO [Topic Deletion Manager 0], Topic deletion callback for createEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:49,575] INFO [Topic Deletion Manager 0], Partition deletion callback for createEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:49,579] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:49,579] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:49,579] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:49,579] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:49,579] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:49,599] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@72ddcaa2 (kafka.controller.KafkaController)
[2020-04-02 14:43:49,599] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:49,599] INFO [Topic Deletion Manager 0], Handling deletion for topics createEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:49,606] INFO [Topic Deletion Manager 0], Deletion of topic createEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:49,608] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:43:49,608] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:43:49,616] INFO [Controller id=0] New topics: [Set(createEvent)], deleted topics: [Set()], new partition replica assignment [Map(createEvent-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:43:49,616] INFO [Controller id=0] New partition creation callback for createEvent-0 (kafka.controller.KafkaController)
[2020-04-02 14:43:52,567] DEBUG [Controller id=0] Delete topics listener fired for topics createJobPost to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:43:52,568] INFO [Controller id=0] Starting topic deletion for topics createJobPost (kafka.controller.KafkaController)
[2020-04-02 14:43:52,568] INFO [Topic Deletion Manager 0], Handling deletion for topics createJobPost (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:52,568] INFO [Topic Deletion Manager 0], Deletion of topic createJobPost (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:52,568] INFO [Topic Deletion Manager 0], Topic deletion callback for createJobPost (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:52,569] INFO [Topic Deletion Manager 0], Partition deletion callback for createJobPost-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:52,572] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:52,573] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:52,573] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:52,573] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:52,573] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:52,591] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@3d53ef6d (kafka.controller.KafkaController)
[2020-04-02 14:43:52,591] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:52,592] INFO [Topic Deletion Manager 0], Handling deletion for topics createJobPost (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:52,598] INFO [Topic Deletion Manager 0], Deletion of topic createJobPost successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:52,600] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:43:52,600] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:43:52,642] INFO [Controller id=0] New topics: [Set(createJobPost)], deleted topics: [Set()], new partition replica assignment [Map(createJobPost-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:43:52,642] INFO [Controller id=0] New partition creation callback for createJobPost-0 (kafka.controller.KafkaController)
[2020-04-02 14:43:55,569] DEBUG [Controller id=0] Delete topics listener fired for topics createProfessionalExperience to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:43:55,569] INFO [Controller id=0] Starting topic deletion for topics createProfessionalExperience (kafka.controller.KafkaController)
[2020-04-02 14:43:55,569] INFO [Topic Deletion Manager 0], Handling deletion for topics createProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:55,570] INFO [Topic Deletion Manager 0], Deletion of topic createProfessionalExperience (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:55,570] INFO [Topic Deletion Manager 0], Topic deletion callback for createProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:55,570] INFO [Topic Deletion Manager 0], Partition deletion callback for createProfessionalExperience-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:55,574] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:55,574] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:55,574] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:55,574] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:55,575] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:55,592] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@48f575db (kafka.controller.KafkaController)
[2020-04-02 14:43:55,592] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:55,592] INFO [Topic Deletion Manager 0], Handling deletion for topics createProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:55,600] INFO [Topic Deletion Manager 0], Deletion of topic createProfessionalExperience successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:55,601] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:43:55,602] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:43:55,616] INFO [Controller id=0] New topics: [Set(createProfessionalExperience)], deleted topics: [Set()], new partition replica assignment [Map(createProfessionalExperience-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:43:55,616] INFO [Controller id=0] New partition creation callback for createProfessionalExperience-0 (kafka.controller.KafkaController)
[2020-04-02 14:43:58,652] DEBUG [Controller id=0] Delete topics listener fired for topics deleteEducation to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:43:58,653] INFO [Controller id=0] Starting topic deletion for topics deleteEducation (kafka.controller.KafkaController)
[2020-04-02 14:43:58,653] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:58,653] INFO [Topic Deletion Manager 0], Deletion of topic deleteEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:58,653] INFO [Topic Deletion Manager 0], Topic deletion callback for deleteEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:58,654] INFO [Topic Deletion Manager 0], Partition deletion callback for deleteEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:58,658] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:58,658] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:58,658] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:58,658] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:58,658] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:43:58,681] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@6f623a3c (kafka.controller.KafkaController)
[2020-04-02 14:43:58,681] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:58,682] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:58,700] INFO [Topic Deletion Manager 0], Deletion of topic deleteEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:43:58,701] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:43:58,702] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:43:58,713] INFO [Controller id=0] New topics: [Set(deleteEducation)], deleted topics: [Set()], new partition replica assignment [Map(deleteEducation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:43:58,713] INFO [Controller id=0] New partition creation callback for deleteEducation-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:01,884] DEBUG [Controller id=0] Delete topics listener fired for topics deleteProfessionalExperience to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:01,884] INFO [Controller id=0] Starting topic deletion for topics deleteProfessionalExperience (kafka.controller.KafkaController)
[2020-04-02 14:44:01,884] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:01,884] INFO [Topic Deletion Manager 0], Deletion of topic deleteProfessionalExperience (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:01,884] INFO [Topic Deletion Manager 0], Topic deletion callback for deleteProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:01,885] INFO [Topic Deletion Manager 0], Partition deletion callback for deleteProfessionalExperience-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:01,888] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:01,888] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:01,888] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:01,889] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:01,889] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:01,911] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@737665a8 (kafka.controller.KafkaController)
[2020-04-02 14:44:01,911] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:01,911] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:01,918] INFO [Topic Deletion Manager 0], Deletion of topic deleteProfessionalExperience successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:01,919] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:01,920] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:01,945] INFO [Controller id=0] New topics: [Set(deleteProfessionalExperience)], deleted topics: [Set()], new partition replica assignment [Map(deleteProfessionalExperience-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:01,945] INFO [Controller id=0] New partition creation callback for deleteProfessionalExperience-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:06,325] DEBUG [Controller id=0] Delete topics listener fired for topics getAllConversationsOfAUser to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:06,325] INFO [Controller id=0] Starting topic deletion for topics getAllConversationsOfAUser (kafka.controller.KafkaController)
[2020-04-02 14:44:06,325] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllConversationsOfAUser (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:06,326] INFO [Topic Deletion Manager 0], Deletion of topic getAllConversationsOfAUser (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:06,326] INFO [Topic Deletion Manager 0], Topic deletion callback for getAllConversationsOfAUser (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:06,327] INFO [Topic Deletion Manager 0], Partition deletion callback for getAllConversationsOfAUser-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:06,330] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:06,330] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:06,331] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:06,331] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:06,331] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:06,351] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@51fcd42c (kafka.controller.KafkaController)
[2020-04-02 14:44:06,351] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:06,352] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllConversationsOfAUser (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:06,360] INFO [Topic Deletion Manager 0], Deletion of topic getAllConversationsOfAUser successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:06,361] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:06,362] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:06,383] INFO [Controller id=0] New topics: [Set(getAllConversationsOfAUser)], deleted topics: [Set()], new partition replica assignment [Map(getAllConversationsOfAUser-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:06,383] INFO [Controller id=0] New partition creation callback for getAllConversationsOfAUser-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:09,411] DEBUG [Controller id=0] Delete topics listener fired for topics getAllMessageOFAConversation to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:09,411] INFO [Controller id=0] Starting topic deletion for topics getAllMessageOFAConversation (kafka.controller.KafkaController)
[2020-04-02 14:44:09,411] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllMessageOFAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:09,411] INFO [Topic Deletion Manager 0], Deletion of topic getAllMessageOFAConversation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:09,411] INFO [Topic Deletion Manager 0], Topic deletion callback for getAllMessageOFAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:09,412] INFO [Topic Deletion Manager 0], Partition deletion callback for getAllMessageOFAConversation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:09,415] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:09,415] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:09,415] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:09,415] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:09,415] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:09,437] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@32c42865 (kafka.controller.KafkaController)
[2020-04-02 14:44:09,437] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:09,438] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllMessageOFAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:09,452] INFO [Topic Deletion Manager 0], Deletion of topic getAllMessageOFAConversation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:09,453] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:09,454] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:09,463] INFO [Controller id=0] New topics: [Set(getAllMessageOFAConversation)], deleted topics: [Set()], new partition replica assignment [Map(getAllMessageOFAConversation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:09,463] INFO [Controller id=0] New partition creation callback for getAllMessageOFAConversation-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:13,036] DEBUG [Controller id=0] Delete topics listener fired for topics getAppliedJobs to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:13,036] INFO [Controller id=0] Starting topic deletion for topics getAppliedJobs (kafka.controller.KafkaController)
[2020-04-02 14:44:13,036] INFO [Topic Deletion Manager 0], Handling deletion for topics getAppliedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:13,036] INFO [Topic Deletion Manager 0], Deletion of topic getAppliedJobs (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:13,036] INFO [Topic Deletion Manager 0], Topic deletion callback for getAppliedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:13,037] INFO [Topic Deletion Manager 0], Partition deletion callback for getAppliedJobs-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:13,040] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:13,040] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:13,040] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:13,041] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:13,041] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:13,060] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4c0947db (kafka.controller.KafkaController)
[2020-04-02 14:44:13,060] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:13,060] INFO [Topic Deletion Manager 0], Handling deletion for topics getAppliedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:13,067] INFO [Topic Deletion Manager 0], Deletion of topic getAppliedJobs successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:13,068] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:13,068] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:13,072] INFO [Controller id=0] New topics: [Set(getAppliedJobs)], deleted topics: [Set()], new partition replica assignment [Map(getAppliedJobs-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:13,072] INFO [Controller id=0] New partition creation callback for getAppliedJobs-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:16,475] DEBUG [Controller id=0] Delete topics listener fired for topics getCompanyInfo to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:16,475] INFO [Controller id=0] Starting topic deletion for topics getCompanyInfo (kafka.controller.KafkaController)
[2020-04-02 14:44:16,475] INFO [Topic Deletion Manager 0], Handling deletion for topics getCompanyInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:16,475] INFO [Topic Deletion Manager 0], Deletion of topic getCompanyInfo (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:16,475] INFO [Topic Deletion Manager 0], Topic deletion callback for getCompanyInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:16,476] INFO [Topic Deletion Manager 0], Partition deletion callback for getCompanyInfo-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:16,479] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:16,479] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:16,479] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:16,479] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:16,479] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:16,498] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@c1230d7 (kafka.controller.KafkaController)
[2020-04-02 14:44:16,498] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:16,499] INFO [Topic Deletion Manager 0], Handling deletion for topics getCompanyInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:16,508] INFO [Topic Deletion Manager 0], Deletion of topic getCompanyInfo successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:16,509] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:16,512] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:16,522] INFO [Controller id=0] New topics: [Set(getCompanyInfo)], deleted topics: [Set()], new partition replica assignment [Map(getCompanyInfo-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:16,522] INFO [Controller id=0] New partition creation callback for getCompanyInfo-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:20,126] DEBUG [Controller id=0] Delete topics listener fired for topics getPostedJobs to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:20,126] INFO [Controller id=0] Starting topic deletion for topics getPostedJobs (kafka.controller.KafkaController)
[2020-04-02 14:44:20,127] INFO [Topic Deletion Manager 0], Handling deletion for topics getPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:20,127] INFO [Topic Deletion Manager 0], Deletion of topic getPostedJobs (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:20,127] INFO [Topic Deletion Manager 0], Topic deletion callback for getPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:20,127] INFO [Topic Deletion Manager 0], Partition deletion callback for getPostedJobs-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:20,130] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:20,130] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:20,130] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:20,131] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:20,131] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:20,150] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@3bf8d8cd (kafka.controller.KafkaController)
[2020-04-02 14:44:20,150] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:20,150] INFO [Topic Deletion Manager 0], Handling deletion for topics getPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:20,157] INFO [Topic Deletion Manager 0], Deletion of topic getPostedJobs successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:20,158] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:20,159] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:20,164] INFO [Controller id=0] New topics: [Set(getPostedJobs)], deleted topics: [Set()], new partition replica assignment [Map(getPostedJobs-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:20,164] INFO [Controller id=0] New partition creation callback for getPostedJobs-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:24,200] DEBUG [Controller id=0] Delete topics listener fired for topics getRegisteredEvents to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:24,200] INFO [Controller id=0] Starting topic deletion for topics getRegisteredEvents (kafka.controller.KafkaController)
[2020-04-02 14:44:24,200] INFO [Topic Deletion Manager 0], Handling deletion for topics getRegisteredEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:24,201] INFO [Topic Deletion Manager 0], Deletion of topic getRegisteredEvents (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:24,201] INFO [Topic Deletion Manager 0], Topic deletion callback for getRegisteredEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:24,201] INFO [Topic Deletion Manager 0], Partition deletion callback for getRegisteredEvents-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:24,205] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:24,205] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:24,205] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:24,205] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:24,205] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:24,223] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@286c48d7 (kafka.controller.KafkaController)
[2020-04-02 14:44:24,223] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:24,223] INFO [Topic Deletion Manager 0], Handling deletion for topics getRegisteredEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:24,229] INFO [Topic Deletion Manager 0], Deletion of topic getRegisteredEvents successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:24,230] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:24,231] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:24,242] INFO [Controller id=0] New topics: [Set(getRegisteredEvents)], deleted topics: [Set()], new partition replica assignment [Map(getRegisteredEvents-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:24,242] INFO [Controller id=0] New partition creation callback for getRegisteredEvents-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:27,182] DEBUG [Controller id=0] Delete topics listener fired for topics getSearchedEvent to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:27,182] INFO [Controller id=0] Starting topic deletion for topics getSearchedEvent (kafka.controller.KafkaController)
[2020-04-02 14:44:27,182] INFO [Topic Deletion Manager 0], Handling deletion for topics getSearchedEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:27,182] INFO [Topic Deletion Manager 0], Deletion of topic getSearchedEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:27,182] INFO [Topic Deletion Manager 0], Topic deletion callback for getSearchedEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:27,183] INFO [Topic Deletion Manager 0], Partition deletion callback for getSearchedEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:27,185] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:27,185] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:27,186] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:27,186] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:27,186] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:27,204] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@2e5df59e (kafka.controller.KafkaController)
[2020-04-02 14:44:27,204] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:27,204] INFO [Topic Deletion Manager 0], Handling deletion for topics getSearchedEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:27,210] INFO [Topic Deletion Manager 0], Deletion of topic getSearchedEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:27,211] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:27,211] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:27,217] INFO [Controller id=0] New topics: [Set(getSearchedEvent)], deleted topics: [Set()], new partition replica assignment [Map(getSearchedEvent-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:27,218] INFO [Controller id=0] New partition creation callback for getSearchedEvent-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:30,051] DEBUG [Controller id=0] Delete topics listener fired for topics getStudentAllEducation to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:30,051] INFO [Controller id=0] Starting topic deletion for topics getStudentAllEducation (kafka.controller.KafkaController)
[2020-04-02 14:44:30,051] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentAllEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:30,051] INFO [Topic Deletion Manager 0], Deletion of topic getStudentAllEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:30,051] INFO [Topic Deletion Manager 0], Topic deletion callback for getStudentAllEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:30,052] INFO [Topic Deletion Manager 0], Partition deletion callback for getStudentAllEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:30,054] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:30,054] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:30,055] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:30,055] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:30,055] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:30,072] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@3354fc0a (kafka.controller.KafkaController)
[2020-04-02 14:44:30,072] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:30,072] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentAllEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:30,079] INFO [Topic Deletion Manager 0], Deletion of topic getStudentAllEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:30,080] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:30,080] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:30,089] INFO [Controller id=0] New topics: [Set(getStudentAllEducation)], deleted topics: [Set()], new partition replica assignment [Map(getStudentAllEducation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:30,090] INFO [Controller id=0] New partition creation callback for getStudentAllEducation-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:32,880] DEBUG [Controller id=0] Delete topics listener fired for topics getStudentInfo to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:32,880] INFO [Controller id=0] Starting topic deletion for topics getStudentInfo (kafka.controller.KafkaController)
[2020-04-02 14:44:32,880] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:32,881] INFO [Topic Deletion Manager 0], Deletion of topic getStudentInfo (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:32,881] INFO [Topic Deletion Manager 0], Topic deletion callback for getStudentInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:32,881] INFO [Topic Deletion Manager 0], Partition deletion callback for getStudentInfo-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:32,884] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:32,884] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:32,884] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:32,884] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:32,884] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:32,903] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4e17741d (kafka.controller.KafkaController)
[2020-04-02 14:44:32,903] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:32,904] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:32,913] INFO [Topic Deletion Manager 0], Deletion of topic getStudentInfo successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:32,914] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:32,915] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:32,929] INFO [Controller id=0] New topics: [Set(getStudentInfo)], deleted topics: [Set()], new partition replica assignment [Map(getStudentInfo-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:32,929] INFO [Controller id=0] New partition creation callback for getStudentInfo-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:36,015] DEBUG [Controller id=0] Delete topics listener fired for topics getStudentsRegisteredInAEvent to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:36,015] INFO [Controller id=0] Starting topic deletion for topics getStudentsRegisteredInAEvent (kafka.controller.KafkaController)
[2020-04-02 14:44:36,016] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentsRegisteredInAEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:36,016] INFO [Topic Deletion Manager 0], Deletion of topic getStudentsRegisteredInAEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:36,016] INFO [Topic Deletion Manager 0], Topic deletion callback for getStudentsRegisteredInAEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:36,017] INFO [Topic Deletion Manager 0], Partition deletion callback for getStudentsRegisteredInAEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:36,019] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:36,019] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:36,020] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:36,020] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:36,020] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:36,038] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4f7a7f8 (kafka.controller.KafkaController)
[2020-04-02 14:44:36,038] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:36,038] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentsRegisteredInAEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:36,044] INFO [Topic Deletion Manager 0], Deletion of topic getStudentsRegisteredInAEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:36,045] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:36,046] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:36,057] INFO [Controller id=0] New topics: [Set(getStudentsRegisteredInAEvent)], deleted topics: [Set()], new partition replica assignment [Map(getStudentsRegisteredInAEvent-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:36,057] INFO [Controller id=0] New partition creation callback for getStudentsRegisteredInAEvent-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:39,176] DEBUG [Controller id=0] Delete topics listener fired for topics listCompanyCreatedEvents to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:39,176] INFO [Controller id=0] Starting topic deletion for topics listCompanyCreatedEvents (kafka.controller.KafkaController)
[2020-04-02 14:44:39,176] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyCreatedEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:39,177] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyCreatedEvents (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:39,177] INFO [Topic Deletion Manager 0], Topic deletion callback for listCompanyCreatedEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:39,177] INFO [Topic Deletion Manager 0], Partition deletion callback for listCompanyCreatedEvents-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:39,179] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:39,179] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:39,179] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:39,180] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:39,180] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:39,198] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@454743fd (kafka.controller.KafkaController)
[2020-04-02 14:44:39,198] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:39,198] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyCreatedEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:39,205] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyCreatedEvents successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:39,206] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:39,206] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:39,212] INFO [Controller id=0] New topics: [Set(listCompanyCreatedEvents)], deleted topics: [Set()], new partition replica assignment [Map(listCompanyCreatedEvents-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:39,212] INFO [Controller id=0] New partition creation callback for listCompanyCreatedEvents-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:42,245] DEBUG [Controller id=0] Delete topics listener fired for topics listCompanyPostedJobs to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:42,245] INFO [Controller id=0] Starting topic deletion for topics listCompanyPostedJobs (kafka.controller.KafkaController)
[2020-04-02 14:44:42,245] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:42,245] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyPostedJobs (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:42,245] INFO [Topic Deletion Manager 0], Topic deletion callback for listCompanyPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:42,246] INFO [Topic Deletion Manager 0], Partition deletion callback for listCompanyPostedJobs-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:42,248] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:42,248] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:42,248] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:42,249] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:42,249] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:42,266] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@516743f3 (kafka.controller.KafkaController)
[2020-04-02 14:44:42,266] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:42,267] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:42,274] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyPostedJobs successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:42,275] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:42,275] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:42,284] INFO [Controller id=0] New topics: [Set(listCompanyPostedJobs)], deleted topics: [Set()], new partition replica assignment [Map(listCompanyPostedJobs-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:42,284] INFO [Controller id=0] New partition creation callback for listCompanyPostedJobs-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:45,265] DEBUG [Controller id=0] Delete topics listener fired for topics login to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:45,266] INFO [Controller id=0] Starting topic deletion for topics login (kafka.controller.KafkaController)
[2020-04-02 14:44:45,266] INFO [Topic Deletion Manager 0], Handling deletion for topics login (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:45,266] INFO [Topic Deletion Manager 0], Deletion of topic login (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:45,266] INFO [Topic Deletion Manager 0], Topic deletion callback for login (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:45,266] INFO [Topic Deletion Manager 0], Partition deletion callback for login-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:45,268] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:45,269] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=login,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:45,269] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=login,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:45,269] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=login,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:45,269] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:45,286] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@2425625e (kafka.controller.KafkaController)
[2020-04-02 14:44:45,286] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=login,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:45,286] INFO [Topic Deletion Manager 0], Handling deletion for topics login (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:45,293] INFO [Topic Deletion Manager 0], Deletion of topic login successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:45,294] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:45,295] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:45,310] INFO [Controller id=0] New topics: [Set(login)], deleted topics: [Set()], new partition replica assignment [Map(login-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:45,310] INFO [Controller id=0] New partition creation callback for login-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:48,367] DEBUG [Controller id=0] Delete topics listener fired for topics passport to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:48,368] INFO [Controller id=0] Starting topic deletion for topics passport (kafka.controller.KafkaController)
[2020-04-02 14:44:48,368] INFO [Topic Deletion Manager 0], Handling deletion for topics passport (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:48,368] INFO [Topic Deletion Manager 0], Deletion of topic passport (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:48,368] INFO [Topic Deletion Manager 0], Topic deletion callback for passport (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:48,369] INFO [Topic Deletion Manager 0], Partition deletion callback for passport-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:48,371] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:48,371] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=passport,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:48,371] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=passport,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:48,371] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=passport,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:48,371] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:48,389] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@1dd4d945 (kafka.controller.KafkaController)
[2020-04-02 14:44:48,389] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=passport,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:48,389] INFO [Topic Deletion Manager 0], Handling deletion for topics passport (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:48,396] INFO [Topic Deletion Manager 0], Deletion of topic passport successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:48,397] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:48,397] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:48,405] INFO [Controller id=0] New topics: [Set(passport)], deleted topics: [Set()], new partition replica assignment [Map(passport-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:48,405] INFO [Controller id=0] New partition creation callback for passport-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:51,486] DEBUG [Controller id=0] Delete topics listener fired for topics registerForEvent to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:51,486] INFO [Controller id=0] Starting topic deletion for topics registerForEvent (kafka.controller.KafkaController)
[2020-04-02 14:44:51,486] INFO [Topic Deletion Manager 0], Handling deletion for topics registerForEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:51,487] INFO [Topic Deletion Manager 0], Deletion of topic registerForEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:51,487] INFO [Topic Deletion Manager 0], Topic deletion callback for registerForEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:51,487] INFO [Topic Deletion Manager 0], Partition deletion callback for registerForEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:51,489] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:51,489] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:51,490] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:51,490] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:51,490] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:51,509] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@627339a9 (kafka.controller.KafkaController)
[2020-04-02 14:44:51,509] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:51,510] INFO [Topic Deletion Manager 0], Handling deletion for topics registerForEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:51,516] INFO [Topic Deletion Manager 0], Deletion of topic registerForEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:51,517] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:51,518] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:51,542] INFO [Controller id=0] New topics: [Set(registerForEvent)], deleted topics: [Set()], new partition replica assignment [Map(registerForEvent-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:51,542] INFO [Controller id=0] New partition creation callback for registerForEvent-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:54,543] DEBUG [Controller id=0] Delete topics listener fired for topics response_topic to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:54,543] INFO [Controller id=0] Starting topic deletion for topics response_topic (kafka.controller.KafkaController)
[2020-04-02 14:44:54,543] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:54,544] INFO [Topic Deletion Manager 0], Deletion of topic response_topic (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:54,544] INFO [Topic Deletion Manager 0], Topic deletion callback for response_topic (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:54,544] INFO [Topic Deletion Manager 0], Partition deletion callback for response_topic-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:54,546] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:54,546] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:54,547] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:54,547] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:54,547] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:54,564] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@96096cf (kafka.controller.KafkaController)
[2020-04-02 14:44:54,564] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:54,565] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:54,570] INFO [Topic Deletion Manager 0], Deletion of topic response_topic successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:54,571] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:54,573] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:54,575] INFO [Controller id=0] New topics: [Set(response_topic)], deleted topics: [Set()], new partition replica assignment [Map(response_topic-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:54,575] INFO [Controller id=0] New partition creation callback for response_topic-0 (kafka.controller.KafkaController)
[2020-04-02 14:44:57,627] DEBUG [Controller id=0] Delete topics listener fired for topics searchStudents to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:57,627] INFO [Controller id=0] Starting topic deletion for topics searchStudents (kafka.controller.KafkaController)
[2020-04-02 14:44:57,627] INFO [Topic Deletion Manager 0], Handling deletion for topics searchStudents (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:57,627] INFO [Topic Deletion Manager 0], Deletion of topic searchStudents (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:57,628] INFO [Topic Deletion Manager 0], Topic deletion callback for searchStudents (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:57,628] INFO [Topic Deletion Manager 0], Partition deletion callback for searchStudents-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:57,630] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:57,630] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:57,631] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:57,631] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:57,631] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:44:57,648] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@6d8322f (kafka.controller.KafkaController)
[2020-04-02 14:44:57,648] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:57,649] INFO [Topic Deletion Manager 0], Handling deletion for topics searchStudents (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:57,655] INFO [Topic Deletion Manager 0], Deletion of topic searchStudents successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:44:57,655] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:44:57,656] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:44:57,667] INFO [Controller id=0] New topics: [Set(searchStudents)], deleted topics: [Set()], new partition replica assignment [Map(searchStudents-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:44:57,667] INFO [Controller id=0] New partition creation callback for searchStudents-0 (kafka.controller.KafkaController)
[2020-04-02 14:45:00,647] DEBUG [Controller id=0] Delete topics listener fired for topics signup to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:45:00,647] INFO [Controller id=0] Starting topic deletion for topics signup (kafka.controller.KafkaController)
[2020-04-02 14:45:00,647] INFO [Topic Deletion Manager 0], Handling deletion for topics signup (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:00,647] INFO [Topic Deletion Manager 0], Deletion of topic signup (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:00,647] INFO [Topic Deletion Manager 0], Topic deletion callback for signup (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:00,648] INFO [Topic Deletion Manager 0], Partition deletion callback for signup-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:00,650] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:00,650] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=signup,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:00,650] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=signup,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:00,650] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=signup,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:00,650] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:00,667] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@3dfdcd40 (kafka.controller.KafkaController)
[2020-04-02 14:45:00,667] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=signup,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:00,667] INFO [Topic Deletion Manager 0], Handling deletion for topics signup (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:00,673] INFO [Topic Deletion Manager 0], Deletion of topic signup successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:00,674] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:45:00,674] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:45:00,711] INFO [Controller id=0] New topics: [Set(signup)], deleted topics: [Set()], new partition replica assignment [Map(signup-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:45:00,711] INFO [Controller id=0] New partition creation callback for signup-0 (kafka.controller.KafkaController)
[2020-04-02 14:45:03,623] DEBUG [Controller id=0] Delete topics listener fired for topics updateAppliedStudentJobStatus to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:45:03,623] INFO [Controller id=0] Starting topic deletion for topics updateAppliedStudentJobStatus (kafka.controller.KafkaController)
[2020-04-02 14:45:03,623] INFO [Topic Deletion Manager 0], Handling deletion for topics updateAppliedStudentJobStatus (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:03,623] INFO [Topic Deletion Manager 0], Deletion of topic updateAppliedStudentJobStatus (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:03,623] INFO [Topic Deletion Manager 0], Topic deletion callback for updateAppliedStudentJobStatus (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:03,624] INFO [Topic Deletion Manager 0], Partition deletion callback for updateAppliedStudentJobStatus-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:03,626] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:03,626] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:03,626] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:03,626] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:03,626] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:03,645] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@46b81527 (kafka.controller.KafkaController)
[2020-04-02 14:45:03,645] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:03,645] INFO [Topic Deletion Manager 0], Handling deletion for topics updateAppliedStudentJobStatus (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:03,652] INFO [Topic Deletion Manager 0], Deletion of topic updateAppliedStudentJobStatus successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:03,653] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:45:03,653] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:45:03,662] INFO [Controller id=0] New topics: [Set(updateAppliedStudentJobStatus)], deleted topics: [Set()], new partition replica assignment [Map(updateAppliedStudentJobStatus-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:45:03,662] INFO [Controller id=0] New partition creation callback for updateAppliedStudentJobStatus-0 (kafka.controller.KafkaController)
[2020-04-02 14:45:06,589] DEBUG [Controller id=0] Delete topics listener fired for topics updateCompanyProfile to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:45:06,589] INFO [Controller id=0] Starting topic deletion for topics updateCompanyProfile (kafka.controller.KafkaController)
[2020-04-02 14:45:06,589] INFO [Topic Deletion Manager 0], Handling deletion for topics updateCompanyProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:06,590] INFO [Topic Deletion Manager 0], Deletion of topic updateCompanyProfile (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:06,590] INFO [Topic Deletion Manager 0], Topic deletion callback for updateCompanyProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:06,590] INFO [Topic Deletion Manager 0], Partition deletion callback for updateCompanyProfile-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:06,592] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:06,592] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:06,593] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:06,593] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:06,593] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:06,609] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4b6325d1 (kafka.controller.KafkaController)
[2020-04-02 14:45:06,609] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:06,609] INFO [Topic Deletion Manager 0], Handling deletion for topics updateCompanyProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:06,616] INFO [Topic Deletion Manager 0], Deletion of topic updateCompanyProfile successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:06,617] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:45:06,618] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:45:06,623] INFO [Controller id=0] New topics: [Set(updateCompanyProfile)], deleted topics: [Set()], new partition replica assignment [Map(updateCompanyProfile-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:45:06,623] INFO [Controller id=0] New partition creation callback for updateCompanyProfile-0 (kafka.controller.KafkaController)
[2020-04-02 14:45:09,560] DEBUG [Controller id=0] Delete topics listener fired for topics updateEducation to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:45:09,560] INFO [Controller id=0] Starting topic deletion for topics updateEducation (kafka.controller.KafkaController)
[2020-04-02 14:45:09,561] INFO [Topic Deletion Manager 0], Handling deletion for topics updateEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:09,561] INFO [Topic Deletion Manager 0], Deletion of topic updateEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:09,561] INFO [Topic Deletion Manager 0], Topic deletion callback for updateEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:09,561] INFO [Topic Deletion Manager 0], Partition deletion callback for updateEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:09,563] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:09,563] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:09,563] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:09,564] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:09,564] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:09,581] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@c6d2fd8 (kafka.controller.KafkaController)
[2020-04-02 14:45:09,581] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:09,582] INFO [Topic Deletion Manager 0], Handling deletion for topics updateEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:09,588] INFO [Topic Deletion Manager 0], Deletion of topic updateEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:09,589] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:45:09,589] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:45:09,598] INFO [Controller id=0] New topics: [Set(updateEducation)], deleted topics: [Set()], new partition replica assignment [Map(updateEducation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:45:09,598] INFO [Controller id=0] New partition creation callback for updateEducation-0 (kafka.controller.KafkaController)
[2020-04-02 14:45:12,498] DEBUG [Controller id=0] Delete topics listener fired for topics updateProfessionalExperience to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:45:12,498] INFO [Controller id=0] Starting topic deletion for topics updateProfessionalExperience (kafka.controller.KafkaController)
[2020-04-02 14:45:12,498] INFO [Topic Deletion Manager 0], Handling deletion for topics updateProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:12,498] INFO [Topic Deletion Manager 0], Deletion of topic updateProfessionalExperience (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:12,499] INFO [Topic Deletion Manager 0], Topic deletion callback for updateProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:12,499] INFO [Topic Deletion Manager 0], Partition deletion callback for updateProfessionalExperience-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:12,501] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:12,501] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:12,502] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:12,502] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:12,502] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:12,518] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@5fa974d8 (kafka.controller.KafkaController)
[2020-04-02 14:45:12,518] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:12,518] INFO [Topic Deletion Manager 0], Handling deletion for topics updateProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:12,524] INFO [Topic Deletion Manager 0], Deletion of topic updateProfessionalExperience successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:12,525] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:45:12,525] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:45:12,538] INFO [Controller id=0] New topics: [Set(updateProfessionalExperience)], deleted topics: [Set()], new partition replica assignment [Map(updateProfessionalExperience-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:45:12,538] INFO [Controller id=0] New partition creation callback for updateProfessionalExperience-0 (kafka.controller.KafkaController)
[2020-04-02 14:45:15,569] DEBUG [Controller id=0] Delete topics listener fired for topics updateSkills to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:45:15,570] INFO [Controller id=0] Starting topic deletion for topics updateSkills (kafka.controller.KafkaController)
[2020-04-02 14:45:15,570] INFO [Topic Deletion Manager 0], Handling deletion for topics updateSkills (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:15,570] INFO [Topic Deletion Manager 0], Deletion of topic updateSkills (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:15,570] INFO [Topic Deletion Manager 0], Topic deletion callback for updateSkills (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:15,571] INFO [Topic Deletion Manager 0], Partition deletion callback for updateSkills-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:15,573] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:15,573] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:15,573] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:15,573] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:15,573] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:15,592] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@593e4327 (kafka.controller.KafkaController)
[2020-04-02 14:45:15,592] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:15,592] INFO [Topic Deletion Manager 0], Handling deletion for topics updateSkills (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:15,598] INFO [Topic Deletion Manager 0], Deletion of topic updateSkills successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:15,599] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:45:15,600] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:45:15,617] INFO [Controller id=0] New topics: [Set(updateSkills)], deleted topics: [Set()], new partition replica assignment [Map(updateSkills-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:45:15,617] INFO [Controller id=0] New partition creation callback for updateSkills-0 (kafka.controller.KafkaController)
[2020-04-02 14:45:18,678] DEBUG [Controller id=0] Delete topics listener fired for topics updateStudentProfile to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:45:18,678] INFO [Controller id=0] Starting topic deletion for topics updateStudentProfile (kafka.controller.KafkaController)
[2020-04-02 14:45:18,678] INFO [Topic Deletion Manager 0], Handling deletion for topics updateStudentProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:18,678] INFO [Topic Deletion Manager 0], Deletion of topic updateStudentProfile (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:18,678] INFO [Topic Deletion Manager 0], Topic deletion callback for updateStudentProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:18,679] INFO [Topic Deletion Manager 0], Partition deletion callback for updateStudentProfile-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:18,681] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:18,681] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:18,681] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:18,681] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:18,681] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 14:45:18,698] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@b21b87c (kafka.controller.KafkaController)
[2020-04-02 14:45:18,698] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:18,699] INFO [Topic Deletion Manager 0], Handling deletion for topics updateStudentProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:18,708] INFO [Topic Deletion Manager 0], Deletion of topic updateStudentProfile successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 14:45:18,709] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 14:45:18,710] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 14:45:18,725] INFO [Controller id=0] New topics: [Set(updateStudentProfile)], deleted topics: [Set()], new partition replica assignment [Map(updateStudentProfile-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 14:45:18,725] INFO [Controller id=0] New partition creation callback for updateStudentProfile-0 (kafka.controller.KafkaController)
