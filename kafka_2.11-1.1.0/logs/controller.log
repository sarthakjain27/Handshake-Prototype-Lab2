[2020-04-03 13:01:56,456] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-03 13:01:56,458] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(getAppliedJobs-0 -> Vector(0), createJobPost-0 -> Vector(0), updateEducation-0 -> Vector(0), deleteProfessionalExperience-0 -> Vector(0), listCompanyCreatedEvents-0 -> Vector(0), getRegisteredEvents-0 -> Vector(0), registerForEvent-0 -> Vector(0), getPostedJobs-0 -> Vector(0), getAllConversationsOfAUser-0 -> Vector(0), deleteEducation-0 -> Vector(0), searchStudents-0 -> Vector(0), updateSkills-0 -> Vector(0), getSearchedEvent-0 -> Vector(0), createEducation-0 -> Vector(0), createEvent-0 -> Vector(0), getAllMessageOFAConversation-0 -> Vector(0), passport-0 -> Vector(0), updateCompanyProfile-0 -> Vector(0), signup-0 -> Vector(0), listCompanyPostedJobs-0 -> Vector(0), getStudentInfo-0 -> Vector(0), applyForJob-0 -> Vector(0), createProfessionalExperience-0 -> Vector(0), login-0 -> Vector(0), addMessageInAConversation-0 -> Vector(0), updateAppliedStudentJobStatus-0 -> Vector(0), updateStudentProfile-0 -> Vector(0), getStudentsRegisteredInAEvent-0 -> Vector(0), getStudentAllEducation-0 -> Vector(0), response_topic-0 -> Vector(0), getCompanyInfo-0 -> Vector(0), updateProfessionalExperience-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-03 13:01:56,458] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-03 13:01:56,458] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-03 13:03:25,569] DEBUG [Controller id=0] Delete topics listener fired for topics addMessageInAConversation to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:03:25,570] INFO [Controller id=0] Starting topic deletion for topics addMessageInAConversation (kafka.controller.KafkaController)
[2020-04-03 13:03:25,574] INFO [Topic Deletion Manager 0], Handling deletion for topics addMessageInAConversation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:25,577] INFO [Topic Deletion Manager 0], Deletion of topic addMessageInAConversation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:25,578] INFO [Topic Deletion Manager 0], Topic deletion callback for addMessageInAConversation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:25,581] INFO [Topic Deletion Manager 0], Partition deletion callback for addMessageInAConversation-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:25,582] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.234.28.197:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-03 13:03:25,600] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:03:25,600] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:03:25,602] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:25,604] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:03:25,604] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:03:25,640] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@2051dab1 (kafka.controller.KafkaController)
[2020-04-03 13:03:25,641] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:25,642] INFO [Topic Deletion Manager 0], Handling deletion for topics addMessageInAConversation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:25,656] INFO [Topic Deletion Manager 0], Deletion of topic addMessageInAConversation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:25,658] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:03:25,658] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:03:37,213] DEBUG [Controller id=0] Delete topics listener fired for topics applyForJob to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:03:37,214] INFO [Controller id=0] Starting topic deletion for topics applyForJob (kafka.controller.KafkaController)
[2020-04-03 13:03:37,214] INFO [Topic Deletion Manager 0], Handling deletion for topics applyForJob (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:37,214] INFO [Topic Deletion Manager 0], Deletion of topic applyForJob (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:37,214] INFO [Topic Deletion Manager 0], Topic deletion callback for applyForJob (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:37,215] INFO [Topic Deletion Manager 0], Partition deletion callback for applyForJob-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:37,218] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:03:37,218] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:03:37,219] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:37,219] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:03:37,219] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:03:37,237] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@62eac452 (kafka.controller.KafkaController)
[2020-04-03 13:03:37,238] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:37,238] INFO [Topic Deletion Manager 0], Handling deletion for topics applyForJob (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:37,249] INFO [Topic Deletion Manager 0], Deletion of topic applyForJob successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:37,250] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:03:37,251] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:03:51,338] DEBUG [Controller id=0] Delete topics listener fired for topics createEducation to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:03:51,338] INFO [Controller id=0] Starting topic deletion for topics createEducation (kafka.controller.KafkaController)
[2020-04-03 13:03:51,338] INFO [Topic Deletion Manager 0], Handling deletion for topics createEducation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:51,338] INFO [Topic Deletion Manager 0], Deletion of topic createEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:51,338] INFO [Topic Deletion Manager 0], Topic deletion callback for createEducation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:51,339] INFO [Topic Deletion Manager 0], Partition deletion callback for createEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:51,341] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:03:51,342] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:03:51,342] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:51,342] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:03:51,342] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:03:51,379] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@487edd51 (kafka.controller.KafkaController)
[2020-04-03 13:03:51,379] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:51,380] INFO [Topic Deletion Manager 0], Handling deletion for topics createEducation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:51,419] INFO [Topic Deletion Manager 0], Deletion of topic createEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:03:51,420] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:03:51,422] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:04:05,325] DEBUG [Controller id=0] Delete topics listener fired for topics createEvent to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:04:05,325] INFO [Controller id=0] Starting topic deletion for topics createEvent (kafka.controller.KafkaController)
[2020-04-03 13:04:05,325] INFO [Topic Deletion Manager 0], Handling deletion for topics createEvent (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:05,325] INFO [Topic Deletion Manager 0], Deletion of topic createEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:05,326] INFO [Topic Deletion Manager 0], Topic deletion callback for createEvent (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:05,326] INFO [Topic Deletion Manager 0], Partition deletion callback for createEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:05,330] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:05,330] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:05,330] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:05,330] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:05,330] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:05,351] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@12b2a2dd (kafka.controller.KafkaController)
[2020-04-03 13:04:05,351] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:05,351] INFO [Topic Deletion Manager 0], Handling deletion for topics createEvent (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:05,365] INFO [Topic Deletion Manager 0], Deletion of topic createEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:05,366] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:04:05,367] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:04:18,779] DEBUG [Controller id=0] Delete topics listener fired for topics createJobPost to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:04:18,779] INFO [Controller id=0] Starting topic deletion for topics createJobPost (kafka.controller.KafkaController)
[2020-04-03 13:04:18,779] INFO [Topic Deletion Manager 0], Handling deletion for topics createJobPost (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:18,779] INFO [Topic Deletion Manager 0], Deletion of topic createJobPost (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:18,779] INFO [Topic Deletion Manager 0], Topic deletion callback for createJobPost (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:18,780] INFO [Topic Deletion Manager 0], Partition deletion callback for createJobPost-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:18,783] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:18,783] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:18,783] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:18,784] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:18,784] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:18,807] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@63306b40 (kafka.controller.KafkaController)
[2020-04-03 13:04:18,807] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:18,808] INFO [Topic Deletion Manager 0], Handling deletion for topics createJobPost (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:18,817] INFO [Topic Deletion Manager 0], Deletion of topic createJobPost successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:18,819] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:04:18,819] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:04:33,139] DEBUG [Controller id=0] Delete topics listener fired for topics createProfessionalExperience to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:04:33,139] INFO [Controller id=0] Starting topic deletion for topics createProfessionalExperience (kafka.controller.KafkaController)
[2020-04-03 13:04:33,139] INFO [Topic Deletion Manager 0], Handling deletion for topics createProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:33,139] INFO [Topic Deletion Manager 0], Deletion of topic createProfessionalExperience (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:33,139] INFO [Topic Deletion Manager 0], Topic deletion callback for createProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:33,139] INFO [Topic Deletion Manager 0], Partition deletion callback for createProfessionalExperience-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:33,151] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:33,151] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:33,151] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:33,152] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:33,152] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:33,191] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@574cfb20 (kafka.controller.KafkaController)
[2020-04-03 13:04:33,192] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:33,192] INFO [Topic Deletion Manager 0], Handling deletion for topics createProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:33,208] INFO [Topic Deletion Manager 0], Deletion of topic createProfessionalExperience successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:33,210] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:04:33,213] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:04:46,723] DEBUG [Controller id=0] Delete topics listener fired for topics deleteEducation to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:04:46,723] INFO [Controller id=0] Starting topic deletion for topics deleteEducation (kafka.controller.KafkaController)
[2020-04-03 13:04:46,723] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteEducation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:46,724] INFO [Topic Deletion Manager 0], Deletion of topic deleteEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:46,724] INFO [Topic Deletion Manager 0], Topic deletion callback for deleteEducation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:46,725] INFO [Topic Deletion Manager 0], Partition deletion callback for deleteEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:46,729] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:46,729] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:46,729] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:46,729] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:46,729] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:04:46,776] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@69e620cd (kafka.controller.KafkaController)
[2020-04-03 13:04:46,776] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:46,777] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteEducation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:46,793] INFO [Topic Deletion Manager 0], Deletion of topic deleteEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:04:46,794] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:04:46,795] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:05:00,293] DEBUG [Controller id=0] Delete topics listener fired for topics deleteProfessionalExperience to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:05:00,293] INFO [Controller id=0] Starting topic deletion for topics deleteProfessionalExperience (kafka.controller.KafkaController)
[2020-04-03 13:05:00,293] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:00,293] INFO [Topic Deletion Manager 0], Deletion of topic deleteProfessionalExperience (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:00,293] INFO [Topic Deletion Manager 0], Topic deletion callback for deleteProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:00,294] INFO [Topic Deletion Manager 0], Partition deletion callback for deleteProfessionalExperience-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:00,317] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:00,317] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:00,317] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:00,317] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:00,317] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:00,348] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@6e45d366 (kafka.controller.KafkaController)
[2020-04-03 13:05:00,348] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:00,349] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:00,362] INFO [Topic Deletion Manager 0], Deletion of topic deleteProfessionalExperience successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:00,363] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:05:00,367] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:05:14,291] DEBUG [Controller id=0] Delete topics listener fired for topics getAllConversationsOfAUser to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:05:14,291] INFO [Controller id=0] Starting topic deletion for topics getAllConversationsOfAUser (kafka.controller.KafkaController)
[2020-04-03 13:05:14,292] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllConversationsOfAUser (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:14,292] INFO [Topic Deletion Manager 0], Deletion of topic getAllConversationsOfAUser (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:14,292] INFO [Topic Deletion Manager 0], Topic deletion callback for getAllConversationsOfAUser (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:14,293] INFO [Topic Deletion Manager 0], Partition deletion callback for getAllConversationsOfAUser-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:14,297] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:14,297] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:14,297] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:14,297] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:14,297] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:14,340] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@ecfcf85 (kafka.controller.KafkaController)
[2020-04-03 13:05:14,340] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:14,340] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllConversationsOfAUser (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:14,357] INFO [Topic Deletion Manager 0], Deletion of topic getAllConversationsOfAUser successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:14,358] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:05:14,359] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:05:28,276] DEBUG [Controller id=0] Delete topics listener fired for topics getAllMessageOFAConversation to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:05:28,278] INFO [Controller id=0] Starting topic deletion for topics getAllMessageOFAConversation (kafka.controller.KafkaController)
[2020-04-03 13:05:28,279] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllMessageOFAConversation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:28,279] INFO [Topic Deletion Manager 0], Deletion of topic getAllMessageOFAConversation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:28,279] INFO [Topic Deletion Manager 0], Topic deletion callback for getAllMessageOFAConversation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:28,281] INFO [Topic Deletion Manager 0], Partition deletion callback for getAllMessageOFAConversation-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:28,285] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:28,285] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:28,285] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:28,285] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:28,285] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:28,405] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@3eeaa087 (kafka.controller.KafkaController)
[2020-04-03 13:05:28,405] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:28,406] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllMessageOFAConversation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:28,417] INFO [Topic Deletion Manager 0], Deletion of topic getAllMessageOFAConversation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:28,419] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:05:28,419] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:05:42,509] DEBUG [Controller id=0] Delete topics listener fired for topics getAppliedJobs to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:05:42,510] INFO [Controller id=0] Starting topic deletion for topics getAppliedJobs (kafka.controller.KafkaController)
[2020-04-03 13:05:42,510] INFO [Topic Deletion Manager 0], Handling deletion for topics getAppliedJobs (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:42,510] INFO [Topic Deletion Manager 0], Deletion of topic getAppliedJobs (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:42,510] INFO [Topic Deletion Manager 0], Topic deletion callback for getAppliedJobs (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:42,511] INFO [Topic Deletion Manager 0], Partition deletion callback for getAppliedJobs-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:42,525] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:42,525] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:42,525] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:42,525] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:42,525] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:42,548] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@66d21fdf (kafka.controller.KafkaController)
[2020-04-03 13:05:42,548] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:42,548] INFO [Topic Deletion Manager 0], Handling deletion for topics getAppliedJobs (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:42,561] INFO [Topic Deletion Manager 0], Deletion of topic getAppliedJobs successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:42,562] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:05:42,562] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:05:56,805] DEBUG [Controller id=0] Delete topics listener fired for topics getCompanyInfo to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:05:56,805] INFO [Controller id=0] Starting topic deletion for topics getCompanyInfo (kafka.controller.KafkaController)
[2020-04-03 13:05:56,805] INFO [Topic Deletion Manager 0], Handling deletion for topics getCompanyInfo (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:56,806] INFO [Topic Deletion Manager 0], Deletion of topic getCompanyInfo (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:56,806] INFO [Topic Deletion Manager 0], Topic deletion callback for getCompanyInfo (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:56,806] INFO [Topic Deletion Manager 0], Partition deletion callback for getCompanyInfo-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:56,813] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:56,813] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:56,813] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:56,813] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:56,813] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:05:56,845] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@26cc2e80 (kafka.controller.KafkaController)
[2020-04-03 13:05:56,846] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:56,846] INFO [Topic Deletion Manager 0], Handling deletion for topics getCompanyInfo (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:56,863] INFO [Topic Deletion Manager 0], Deletion of topic getCompanyInfo successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:05:56,866] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:05:56,871] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:06:10,471] DEBUG [Controller id=0] Delete topics listener fired for topics getPostedJobs to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:06:10,471] INFO [Controller id=0] Starting topic deletion for topics getPostedJobs (kafka.controller.KafkaController)
[2020-04-03 13:06:10,472] INFO [Topic Deletion Manager 0], Handling deletion for topics getPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:10,472] INFO [Topic Deletion Manager 0], Deletion of topic getPostedJobs (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:10,472] INFO [Topic Deletion Manager 0], Topic deletion callback for getPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:10,472] INFO [Topic Deletion Manager 0], Partition deletion callback for getPostedJobs-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:10,493] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:10,493] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:10,493] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:10,495] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:10,495] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:10,551] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@560f6e3b (kafka.controller.KafkaController)
[2020-04-03 13:06:10,551] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:10,552] INFO [Topic Deletion Manager 0], Handling deletion for topics getPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:10,569] INFO [Topic Deletion Manager 0], Deletion of topic getPostedJobs successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:10,570] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:06:10,570] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:06:25,149] DEBUG [Controller id=0] Delete topics listener fired for topics getRegisteredEvents to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:06:25,149] INFO [Controller id=0] Starting topic deletion for topics getRegisteredEvents (kafka.controller.KafkaController)
[2020-04-03 13:06:25,149] INFO [Topic Deletion Manager 0], Handling deletion for topics getRegisteredEvents (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:25,149] INFO [Topic Deletion Manager 0], Deletion of topic getRegisteredEvents (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:25,149] INFO [Topic Deletion Manager 0], Topic deletion callback for getRegisteredEvents (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:25,150] INFO [Topic Deletion Manager 0], Partition deletion callback for getRegisteredEvents-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:25,164] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:25,164] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:25,164] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:25,166] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:25,166] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:25,198] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@3d0a02e5 (kafka.controller.KafkaController)
[2020-04-03 13:06:25,198] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:25,199] INFO [Topic Deletion Manager 0], Handling deletion for topics getRegisteredEvents (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:25,218] INFO [Topic Deletion Manager 0], Deletion of topic getRegisteredEvents successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:25,218] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:06:25,219] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:06:38,858] DEBUG [Controller id=0] Delete topics listener fired for topics getSearchedEvent to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:06:38,858] INFO [Controller id=0] Starting topic deletion for topics getSearchedEvent (kafka.controller.KafkaController)
[2020-04-03 13:06:38,859] INFO [Topic Deletion Manager 0], Handling deletion for topics getSearchedEvent (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:38,859] INFO [Topic Deletion Manager 0], Deletion of topic getSearchedEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:38,859] INFO [Topic Deletion Manager 0], Topic deletion callback for getSearchedEvent (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:38,859] INFO [Topic Deletion Manager 0], Partition deletion callback for getSearchedEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:38,882] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:38,882] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:38,882] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:38,883] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:38,883] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:38,906] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4bd0ce7c (kafka.controller.KafkaController)
[2020-04-03 13:06:38,907] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:38,907] INFO [Topic Deletion Manager 0], Handling deletion for topics getSearchedEvent (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:38,923] INFO [Topic Deletion Manager 0], Deletion of topic getSearchedEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:38,924] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:06:38,924] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:06:52,033] DEBUG [Controller id=0] Delete topics listener fired for topics getStudentAllEducation to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:06:52,033] INFO [Controller id=0] Starting topic deletion for topics getStudentAllEducation (kafka.controller.KafkaController)
[2020-04-03 13:06:52,033] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentAllEducation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:52,034] INFO [Topic Deletion Manager 0], Deletion of topic getStudentAllEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:52,034] INFO [Topic Deletion Manager 0], Topic deletion callback for getStudentAllEducation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:52,034] INFO [Topic Deletion Manager 0], Partition deletion callback for getStudentAllEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:52,064] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:52,064] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:52,064] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:52,064] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:52,064] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:06:52,097] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@caf41a8 (kafka.controller.KafkaController)
[2020-04-03 13:06:52,097] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:52,097] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentAllEducation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:52,121] INFO [Topic Deletion Manager 0], Deletion of topic getStudentAllEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:06:52,122] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:06:52,124] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:06:56,472] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-03 13:06:56,472] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(updateEducation-0 -> Vector(0), listCompanyCreatedEvents-0 -> Vector(0), registerForEvent-0 -> Vector(0), searchStudents-0 -> Vector(0), updateSkills-0 -> Vector(0), passport-0 -> Vector(0), updateCompanyProfile-0 -> Vector(0), signup-0 -> Vector(0), login-0 -> Vector(0), listCompanyPostedJobs-0 -> Vector(0), getStudentInfo-0 -> Vector(0), updateAppliedStudentJobStatus-0 -> Vector(0), updateStudentProfile-0 -> Vector(0), getStudentsRegisteredInAEvent-0 -> Vector(0), response_topic-0 -> Vector(0), updateProfessionalExperience-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-03 13:06:56,473] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-03 13:06:56,473] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-03 13:07:05,648] DEBUG [Controller id=0] Delete topics listener fired for topics getStudentInfo to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:07:05,649] INFO [Controller id=0] Starting topic deletion for topics getStudentInfo (kafka.controller.KafkaController)
[2020-04-03 13:07:05,649] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentInfo (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:05,649] INFO [Topic Deletion Manager 0], Deletion of topic getStudentInfo (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:05,649] INFO [Topic Deletion Manager 0], Topic deletion callback for getStudentInfo (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:05,649] INFO [Topic Deletion Manager 0], Partition deletion callback for getStudentInfo-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:05,653] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:05,653] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:05,653] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:05,653] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:05,653] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:05,690] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@217c88b0 (kafka.controller.KafkaController)
[2020-04-03 13:07:05,690] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:05,690] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentInfo (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:05,699] INFO [Topic Deletion Manager 0], Deletion of topic getStudentInfo successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:05,700] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:07:05,701] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:07:17,137] DEBUG [Controller id=0] Delete topics listener fired for topics getStudentsRegisteredInAEvent to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:07:17,137] INFO [Controller id=0] Starting topic deletion for topics getStudentsRegisteredInAEvent (kafka.controller.KafkaController)
[2020-04-03 13:07:17,137] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentsRegisteredInAEvent (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:17,137] INFO [Topic Deletion Manager 0], Deletion of topic getStudentsRegisteredInAEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:17,137] INFO [Topic Deletion Manager 0], Topic deletion callback for getStudentsRegisteredInAEvent (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:17,138] INFO [Topic Deletion Manager 0], Partition deletion callback for getStudentsRegisteredInAEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:17,142] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:17,142] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:17,142] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:17,143] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:17,143] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:17,158] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4c0cab50 (kafka.controller.KafkaController)
[2020-04-03 13:07:17,158] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:17,159] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentsRegisteredInAEvent (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:17,167] INFO [Topic Deletion Manager 0], Deletion of topic getStudentsRegisteredInAEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:17,168] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:07:17,168] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:07:28,697] DEBUG [Controller id=0] Delete topics listener fired for topics listCompanyCreatedEvents to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:07:28,697] INFO [Controller id=0] Starting topic deletion for topics listCompanyCreatedEvents (kafka.controller.KafkaController)
[2020-04-03 13:07:28,697] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyCreatedEvents (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:28,697] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyCreatedEvents (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:28,697] INFO [Topic Deletion Manager 0], Topic deletion callback for listCompanyCreatedEvents (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:28,698] INFO [Topic Deletion Manager 0], Partition deletion callback for listCompanyCreatedEvents-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:28,701] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:28,701] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:28,701] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:28,702] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:28,702] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:28,744] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@1e23f83 (kafka.controller.KafkaController)
[2020-04-03 13:07:28,744] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:28,744] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyCreatedEvents (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:28,751] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyCreatedEvents successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:28,752] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:07:28,752] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:07:40,232] DEBUG [Controller id=0] Delete topics listener fired for topics listCompanyPostedJobs to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:07:40,232] INFO [Controller id=0] Starting topic deletion for topics listCompanyPostedJobs (kafka.controller.KafkaController)
[2020-04-03 13:07:40,233] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:40,233] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyPostedJobs (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:40,233] INFO [Topic Deletion Manager 0], Topic deletion callback for listCompanyPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:40,233] INFO [Topic Deletion Manager 0], Partition deletion callback for listCompanyPostedJobs-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:40,235] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:40,235] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:40,235] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:40,236] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:40,236] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:40,246] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@77368c16 (kafka.controller.KafkaController)
[2020-04-03 13:07:40,246] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:40,246] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:40,250] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyPostedJobs successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:40,251] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:07:40,251] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:07:51,733] DEBUG [Controller id=0] Delete topics listener fired for topics login to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:07:51,733] INFO [Controller id=0] Starting topic deletion for topics login (kafka.controller.KafkaController)
[2020-04-03 13:07:51,733] INFO [Topic Deletion Manager 0], Handling deletion for topics login (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:51,733] INFO [Topic Deletion Manager 0], Deletion of topic login (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:51,733] INFO [Topic Deletion Manager 0], Topic deletion callback for login (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:51,733] INFO [Topic Deletion Manager 0], Partition deletion callback for login-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:51,737] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:51,737] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=login,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:51,737] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=login,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:51,737] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=login,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:51,737] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:07:51,748] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@324aa348 (kafka.controller.KafkaController)
[2020-04-03 13:07:51,748] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=login,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:51,748] INFO [Topic Deletion Manager 0], Handling deletion for topics login (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:51,754] INFO [Topic Deletion Manager 0], Deletion of topic login successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:07:51,755] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:07:51,755] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:08:03,215] DEBUG [Controller id=0] Delete topics listener fired for topics passport to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:08:03,215] INFO [Controller id=0] Starting topic deletion for topics passport (kafka.controller.KafkaController)
[2020-04-03 13:08:03,215] INFO [Topic Deletion Manager 0], Handling deletion for topics passport (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:03,215] INFO [Topic Deletion Manager 0], Deletion of topic passport (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:03,215] INFO [Topic Deletion Manager 0], Topic deletion callback for passport (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:03,216] INFO [Topic Deletion Manager 0], Partition deletion callback for passport-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:03,218] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:03,219] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=passport,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:03,219] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=passport,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:03,219] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=passport,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:03,219] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:03,230] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@1bb5c87a (kafka.controller.KafkaController)
[2020-04-03 13:08:03,230] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=passport,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:03,230] INFO [Topic Deletion Manager 0], Handling deletion for topics passport (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:03,238] INFO [Topic Deletion Manager 0], Deletion of topic passport successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:03,239] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:08:03,239] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:08:14,704] DEBUG [Controller id=0] Delete topics listener fired for topics registerForEvent to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:08:14,704] INFO [Controller id=0] Starting topic deletion for topics registerForEvent (kafka.controller.KafkaController)
[2020-04-03 13:08:14,704] INFO [Topic Deletion Manager 0], Handling deletion for topics registerForEvent (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:14,704] INFO [Topic Deletion Manager 0], Deletion of topic registerForEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:14,704] INFO [Topic Deletion Manager 0], Topic deletion callback for registerForEvent (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:14,704] INFO [Topic Deletion Manager 0], Partition deletion callback for registerForEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:14,707] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:14,707] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:14,707] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:14,708] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:14,708] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:14,725] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@b3bf2a8 (kafka.controller.KafkaController)
[2020-04-03 13:08:14,725] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:14,725] INFO [Topic Deletion Manager 0], Handling deletion for topics registerForEvent (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:14,730] INFO [Topic Deletion Manager 0], Deletion of topic registerForEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:14,730] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:08:14,731] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:08:26,229] DEBUG [Controller id=0] Delete topics listener fired for topics response_topic to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:08:26,229] INFO [Controller id=0] Starting topic deletion for topics response_topic (kafka.controller.KafkaController)
[2020-04-03 13:08:26,229] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:26,229] INFO [Topic Deletion Manager 0], Deletion of topic response_topic (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:26,229] INFO [Topic Deletion Manager 0], Topic deletion callback for response_topic (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:26,230] INFO [Topic Deletion Manager 0], Partition deletion callback for response_topic-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:26,232] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:26,232] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:26,232] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:26,232] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:26,232] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:26,241] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@482e89e5 (kafka.controller.KafkaController)
[2020-04-03 13:08:26,241] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:26,241] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:26,248] INFO [Topic Deletion Manager 0], Deletion of topic response_topic successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:26,249] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:08:26,250] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:08:37,769] DEBUG [Controller id=0] Delete topics listener fired for topics searchStudents to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:08:37,769] INFO [Controller id=0] Starting topic deletion for topics searchStudents (kafka.controller.KafkaController)
[2020-04-03 13:08:37,769] INFO [Topic Deletion Manager 0], Handling deletion for topics searchStudents (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:37,769] INFO [Topic Deletion Manager 0], Deletion of topic searchStudents (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:37,769] INFO [Topic Deletion Manager 0], Topic deletion callback for searchStudents (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:37,770] INFO [Topic Deletion Manager 0], Partition deletion callback for searchStudents-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:37,772] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:37,773] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:37,773] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:37,773] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:37,773] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:37,784] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@2f99234b (kafka.controller.KafkaController)
[2020-04-03 13:08:37,784] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:37,784] INFO [Topic Deletion Manager 0], Handling deletion for topics searchStudents (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:37,792] INFO [Topic Deletion Manager 0], Deletion of topic searchStudents successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:37,792] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:08:37,793] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:08:50,942] DEBUG [Controller id=0] Delete topics listener fired for topics signup to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:08:50,942] INFO [Controller id=0] Starting topic deletion for topics signup (kafka.controller.KafkaController)
[2020-04-03 13:08:50,942] INFO [Topic Deletion Manager 0], Handling deletion for topics signup (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:50,942] INFO [Topic Deletion Manager 0], Deletion of topic signup (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:50,942] INFO [Topic Deletion Manager 0], Topic deletion callback for signup (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:50,943] INFO [Topic Deletion Manager 0], Partition deletion callback for signup-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:50,949] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:50,949] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=signup,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:50,949] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=signup,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:50,950] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=signup,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:50,950] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:08:50,971] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@1adac8da (kafka.controller.KafkaController)
[2020-04-03 13:08:50,971] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=signup,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:50,972] INFO [Topic Deletion Manager 0], Handling deletion for topics signup (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:50,981] INFO [Topic Deletion Manager 0], Deletion of topic signup successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:08:50,985] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:08:50,986] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:09:02,635] DEBUG [Controller id=0] Delete topics listener fired for topics updateAppliedStudentJobStatus to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:09:02,635] INFO [Controller id=0] Starting topic deletion for topics updateAppliedStudentJobStatus (kafka.controller.KafkaController)
[2020-04-03 13:09:02,635] INFO [Topic Deletion Manager 0], Handling deletion for topics updateAppliedStudentJobStatus (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:02,635] INFO [Topic Deletion Manager 0], Deletion of topic updateAppliedStudentJobStatus (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:02,635] INFO [Topic Deletion Manager 0], Topic deletion callback for updateAppliedStudentJobStatus (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:02,636] INFO [Topic Deletion Manager 0], Partition deletion callback for updateAppliedStudentJobStatus-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:02,643] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:02,643] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:02,643] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:02,643] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:02,643] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:02,658] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4e20c79b (kafka.controller.KafkaController)
[2020-04-03 13:09:02,658] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:02,659] INFO [Topic Deletion Manager 0], Handling deletion for topics updateAppliedStudentJobStatus (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:02,687] INFO [Topic Deletion Manager 0], Deletion of topic updateAppliedStudentJobStatus successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:02,688] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:09:02,688] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:09:14,931] DEBUG [Controller id=0] Delete topics listener fired for topics updateCompanyProfile to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:09:14,931] INFO [Controller id=0] Starting topic deletion for topics updateCompanyProfile (kafka.controller.KafkaController)
[2020-04-03 13:09:14,931] INFO [Topic Deletion Manager 0], Handling deletion for topics updateCompanyProfile (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:14,931] INFO [Topic Deletion Manager 0], Deletion of topic updateCompanyProfile (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:14,931] INFO [Topic Deletion Manager 0], Topic deletion callback for updateCompanyProfile (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:14,931] INFO [Topic Deletion Manager 0], Partition deletion callback for updateCompanyProfile-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:14,934] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:14,934] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:14,934] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:14,934] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:14,934] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:14,947] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@72fd1e1b (kafka.controller.KafkaController)
[2020-04-03 13:09:14,947] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:14,947] INFO [Topic Deletion Manager 0], Handling deletion for topics updateCompanyProfile (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:14,954] INFO [Topic Deletion Manager 0], Deletion of topic updateCompanyProfile successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:14,955] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:09:14,955] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:09:26,505] DEBUG [Controller id=0] Delete topics listener fired for topics updateEducation to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:09:26,505] INFO [Controller id=0] Starting topic deletion for topics updateEducation (kafka.controller.KafkaController)
[2020-04-03 13:09:26,505] INFO [Topic Deletion Manager 0], Handling deletion for topics updateEducation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:26,505] INFO [Topic Deletion Manager 0], Deletion of topic updateEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:26,505] INFO [Topic Deletion Manager 0], Topic deletion callback for updateEducation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:26,506] INFO [Topic Deletion Manager 0], Partition deletion callback for updateEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:26,515] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:26,515] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:26,515] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:26,515] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:26,515] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:26,527] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@1498e874 (kafka.controller.KafkaController)
[2020-04-03 13:09:26,527] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:26,527] INFO [Topic Deletion Manager 0], Handling deletion for topics updateEducation (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:26,532] INFO [Topic Deletion Manager 0], Deletion of topic updateEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:26,533] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:09:26,534] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:09:38,108] DEBUG [Controller id=0] Delete topics listener fired for topics updateProfessionalExperience to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:09:38,108] INFO [Controller id=0] Starting topic deletion for topics updateProfessionalExperience (kafka.controller.KafkaController)
[2020-04-03 13:09:38,108] INFO [Topic Deletion Manager 0], Handling deletion for topics updateProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:38,108] INFO [Topic Deletion Manager 0], Deletion of topic updateProfessionalExperience (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:38,108] INFO [Topic Deletion Manager 0], Topic deletion callback for updateProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:38,108] INFO [Topic Deletion Manager 0], Partition deletion callback for updateProfessionalExperience-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:38,111] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:38,111] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:38,111] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:38,112] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:38,112] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:38,130] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@58487e25 (kafka.controller.KafkaController)
[2020-04-03 13:09:38,130] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:38,131] INFO [Topic Deletion Manager 0], Handling deletion for topics updateProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:38,142] INFO [Topic Deletion Manager 0], Deletion of topic updateProfessionalExperience successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:38,142] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:09:38,143] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:09:54,439] DEBUG [Controller id=0] Delete topics listener fired for topics updateSkills to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:09:54,439] INFO [Controller id=0] Starting topic deletion for topics updateSkills (kafka.controller.KafkaController)
[2020-04-03 13:09:54,439] INFO [Topic Deletion Manager 0], Handling deletion for topics updateSkills (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:54,439] INFO [Topic Deletion Manager 0], Deletion of topic updateSkills (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:54,439] INFO [Topic Deletion Manager 0], Topic deletion callback for updateSkills (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:54,440] INFO [Topic Deletion Manager 0], Partition deletion callback for updateSkills-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:54,447] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:54,447] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:54,447] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:54,448] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:54,448] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:09:54,470] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@109c66a8 (kafka.controller.KafkaController)
[2020-04-03 13:09:54,471] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:54,471] INFO [Topic Deletion Manager 0], Handling deletion for topics updateSkills (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:54,484] INFO [Topic Deletion Manager 0], Deletion of topic updateSkills successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:09:54,488] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:09:54,490] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:10:09,611] DEBUG [Controller id=0] Delete topics listener fired for topics updateStudentProfile to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:10:09,611] INFO [Controller id=0] Starting topic deletion for topics updateStudentProfile (kafka.controller.KafkaController)
[2020-04-03 13:10:09,611] INFO [Topic Deletion Manager 0], Handling deletion for topics updateStudentProfile (kafka.controller.TopicDeletionManager)
[2020-04-03 13:10:09,611] INFO [Topic Deletion Manager 0], Deletion of topic updateStudentProfile (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:10:09,612] INFO [Topic Deletion Manager 0], Topic deletion callback for updateStudentProfile (kafka.controller.TopicDeletionManager)
[2020-04-03 13:10:09,612] INFO [Topic Deletion Manager 0], Partition deletion callback for updateStudentProfile-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:10:09,614] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:10:09,614] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:10:09,614] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:10:09,615] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:10:09,615] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:10:09,691] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@a0baf66 (kafka.controller.KafkaController)
[2020-04-03 13:10:09,691] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:10:09,691] INFO [Topic Deletion Manager 0], Handling deletion for topics updateStudentProfile (kafka.controller.TopicDeletionManager)
[2020-04-03 13:10:09,715] INFO [Topic Deletion Manager 0], Deletion of topic updateStudentProfile successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:10:09,717] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:10:09,719] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:11:56,487] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-03 13:11:56,487] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-03 13:16:56,499] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-03 13:16:56,499] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-03 13:21:56,526] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-03 13:21:56,527] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-03 13:26:56,539] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-03 13:26:56,539] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-03 13:27:26,093] INFO [Controller id=0] New topics: [Set(login)], deleted topics: [Set()], new partition replica assignment [Map(login-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 13:27:26,093] INFO [Controller id=0] New partition creation callback for login-0 (kafka.controller.KafkaController)
[2020-04-03 13:27:26,102] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.234.28.197:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-03 13:28:14,858] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-04-03 13:28:14,858] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-04-03 13:28:14,859] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-04-03 13:28:14,864] TRACE [Controller id=0] All leaders = login-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2020-04-03 13:28:15,635] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-03 13:28:15,635] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-03 13:28:15,635] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-03 13:28:15,636] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-04-03 13:28:15,638] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-03 13:28:15,640] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2020-04-03 13:28:15,642] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2020-04-03 13:28:15,647] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-03 13:28:15,648] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-03 13:28:15,648] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-03 13:28:15,656] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-04-03 13:29:32,430] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-03 13:30:39,774] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-03 13:30:39,812] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2020-04-03 13:30:39,812] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2020-04-03 13:30:39,815] INFO [Controller id=0] Initialized controller epoch to 1 and zk version 0 (kafka.controller.KafkaController)
[2020-04-03 13:30:39,816] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2020-04-03 13:30:39,825] INFO [Controller id=0] Epoch incremented to 2 (kafka.controller.KafkaController)
[2020-04-03 13:30:39,826] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-03 13:30:39,830] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-03 13:30:39,840] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-03 13:30:39,847] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-03 13:30:40,018] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-03 13:30:40,232] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-03 13:30:40,293] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-03 13:30:40,298] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-04-03 13:30:40,326] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-04-03 13:30:40,327] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-03 13:30:40,327] INFO [Controller id=0] Current list of topics in the cluster: Set(login) (kafka.controller.KafkaController)
[2020-04-03 13:30:40,328] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-03 13:30:40,334] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-03 13:30:40,338] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-03 13:30:40,340] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-03 13:30:40,341] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-03 13:30:40,557] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2020-04-03 13:30:40,597] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.234.28.197:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-03 13:30:40,600] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2020-04-03 13:30:40,845] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=login,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2020-04-03 13:30:40,847] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2020-04-03 13:30:40,853] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2020-04-03 13:30:40,858] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(login-0 -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2020-04-03 13:30:40,859] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-04-03 13:30:41,094] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-03 13:30:41,112] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-03 13:30:41,113] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-03 13:30:41,114] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-03 13:30:41,114] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-04-03 13:30:41,135] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-03 13:30:46,166] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-03 13:30:46,170] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(login-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-03 13:30:46,173] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-03 13:30:46,174] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-03 13:34:34,227] INFO [Controller id=0] New topics: [Set(response_topic)], deleted topics: [Set()], new partition replica assignment [Map(response_topic-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 13:34:34,228] INFO [Controller id=0] New partition creation callback for response_topic-0 (kafka.controller.KafkaController)
[2020-04-03 13:35:46,184] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-03 13:35:46,185] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(login-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-03 13:35:46,185] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-03 13:35:46,185] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-03 13:37:09,961] DEBUG [Controller id=0] Delete topics listener fired for topics response_topic to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:37:09,962] INFO [Controller id=0] Starting topic deletion for topics response_topic (kafka.controller.KafkaController)
[2020-04-03 13:37:09,964] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:09,967] INFO [Topic Deletion Manager 0], Deletion of topic response_topic (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:09,968] INFO [Topic Deletion Manager 0], Topic deletion callback for response_topic (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:09,973] INFO [Topic Deletion Manager 0], Partition deletion callback for response_topic-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:09,991] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:37:09,992] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:37:09,995] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:09,996] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:37:09,996] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:37:10,055] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@6dfafd76 (kafka.controller.KafkaController)
[2020-04-03 13:37:10,057] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:10,059] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:10,085] INFO [Topic Deletion Manager 0], Deletion of topic response_topic successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:10,086] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:37:10,087] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:37:29,273] DEBUG [Controller id=0] Delete topics listener fired for topics login to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:37:29,273] INFO [Controller id=0] Starting topic deletion for topics login (kafka.controller.KafkaController)
[2020-04-03 13:37:29,273] INFO [Topic Deletion Manager 0], Handling deletion for topics login (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:29,273] INFO [Topic Deletion Manager 0], Deletion of topic login (re)started (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:29,274] INFO [Topic Deletion Manager 0], Topic deletion callback for login (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:29,274] INFO [Topic Deletion Manager 0], Partition deletion callback for login-0 (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:29,280] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:37:29,280] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=login,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:37:29,280] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=login,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:29,281] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=login,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:37:29,281] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-03 13:37:29,294] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@2ff4d082 (kafka.controller.KafkaController)
[2020-04-03 13:37:29,294] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=login,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:29,294] INFO [Topic Deletion Manager 0], Handling deletion for topics login (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:29,302] INFO [Topic Deletion Manager 0], Deletion of topic login successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-03 13:37:29,303] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-03 13:37:29,304] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-03 13:40:04,751] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-04-03 13:40:04,751] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-04-03 13:40:04,751] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-04-03 13:40:04,753] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2020-04-03 13:40:05,766] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-03 13:40:05,766] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-03 13:40:05,766] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-03 13:40:05,767] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-04-03 13:40:05,767] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-03 13:40:05,769] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2020-04-03 13:40:05,769] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2020-04-03 13:40:05,769] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-03 13:40:05,769] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-03 13:40:05,769] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-03 13:40:05,771] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
