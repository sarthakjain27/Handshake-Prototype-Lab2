[2020-04-02 19:00:07,920] INFO [Controller id=0] New topics: [Set(createProfessionalExperience)], deleted topics: [Set()], new partition replica assignment [Map(createProfessionalExperience-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:00:07,921] INFO [Controller id=0] New partition creation callback for createProfessionalExperience-0 (kafka.controller.KafkaController)
[2020-04-02 19:00:19,807] INFO [Controller id=0] New topics: [Set(deleteEducation)], deleted topics: [Set()], new partition replica assignment [Map(deleteEducation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:00:19,807] INFO [Controller id=0] New partition creation callback for deleteEducation-0 (kafka.controller.KafkaController)
[2020-04-02 19:00:31,624] INFO [Controller id=0] New topics: [Set(deleteProfessionalExperience)], deleted topics: [Set()], new partition replica assignment [Map(deleteProfessionalExperience-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:00:31,624] INFO [Controller id=0] New partition creation callback for deleteProfessionalExperience-0 (kafka.controller.KafkaController)
[2020-04-02 19:00:43,455] INFO [Controller id=0] New topics: [Set(getAllConversationsOfAUser)], deleted topics: [Set()], new partition replica assignment [Map(getAllConversationsOfAUser-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:00:43,456] INFO [Controller id=0] New partition creation callback for getAllConversationsOfAUser-0 (kafka.controller.KafkaController)
[2020-04-02 19:00:55,253] INFO [Controller id=0] New topics: [Set(getAllMessageOFAConversation)], deleted topics: [Set()], new partition replica assignment [Map(getAllMessageOFAConversation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:00:55,254] INFO [Controller id=0] New partition creation callback for getAllMessageOFAConversation-0 (kafka.controller.KafkaController)
[2020-04-02 19:01:07,069] INFO [Controller id=0] New topics: [Set(getAppliedJobs)], deleted topics: [Set()], new partition replica assignment [Map(getAppliedJobs-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:01:07,070] INFO [Controller id=0] New partition creation callback for getAppliedJobs-0 (kafka.controller.KafkaController)
[2020-04-02 19:01:18,901] INFO [Controller id=0] New topics: [Set(getCompanyInfo)], deleted topics: [Set()], new partition replica assignment [Map(getCompanyInfo-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:01:18,901] INFO [Controller id=0] New partition creation callback for getCompanyInfo-0 (kafka.controller.KafkaController)
[2020-04-02 19:01:30,719] INFO [Controller id=0] New topics: [Set(getPostedJobs)], deleted topics: [Set()], new partition replica assignment [Map(getPostedJobs-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:01:30,719] INFO [Controller id=0] New partition creation callback for getPostedJobs-0 (kafka.controller.KafkaController)
[2020-04-02 19:01:42,543] INFO [Controller id=0] New topics: [Set(getRegisteredEvents)], deleted topics: [Set()], new partition replica assignment [Map(getRegisteredEvents-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:01:42,543] INFO [Controller id=0] New partition creation callback for getRegisteredEvents-0 (kafka.controller.KafkaController)
[2020-04-02 19:01:54,358] INFO [Controller id=0] New topics: [Set(getSearchedEvent)], deleted topics: [Set()], new partition replica assignment [Map(getSearchedEvent-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:01:54,358] INFO [Controller id=0] New partition creation callback for getSearchedEvent-0 (kafka.controller.KafkaController)
[2020-04-02 19:02:06,190] INFO [Controller id=0] New topics: [Set(getStudentAllEducation)], deleted topics: [Set()], new partition replica assignment [Map(getStudentAllEducation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:02:06,190] INFO [Controller id=0] New partition creation callback for getStudentAllEducation-0 (kafka.controller.KafkaController)
[2020-04-02 19:02:18,010] INFO [Controller id=0] New topics: [Set(getStudentInfo)], deleted topics: [Set()], new partition replica assignment [Map(getStudentInfo-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:02:18,010] INFO [Controller id=0] New partition creation callback for getStudentInfo-0 (kafka.controller.KafkaController)
[2020-04-02 19:02:30,069] INFO [Controller id=0] New topics: [Set(getStudentsRegisteredInAEvent)], deleted topics: [Set()], new partition replica assignment [Map(getStudentsRegisteredInAEvent-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:02:30,069] INFO [Controller id=0] New partition creation callback for getStudentsRegisteredInAEvent-0 (kafka.controller.KafkaController)
[2020-04-02 19:02:45,094] INFO [Controller id=0] New topics: [Set(listCompanyCreatedEvents)], deleted topics: [Set()], new partition replica assignment [Map(listCompanyCreatedEvents-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:02:45,094] INFO [Controller id=0] New partition creation callback for listCompanyCreatedEvents-0 (kafka.controller.KafkaController)
[2020-04-02 19:02:47,650] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-02 19:02:47,650] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(getAppliedJobs-0 -> Vector(0), createJobPost-0 -> Vector(0), deleteProfessionalExperience-0 -> Vector(0), listCompanyCreatedEvents-0 -> Vector(0), getRegisteredEvents-0 -> Vector(0), getAllConversationsOfAUser-0 -> Vector(0), getPostedJobs-0 -> Vector(0), deleteEducation-0 -> Vector(0), getSearchedEvent-0 -> Vector(0), createEducation-0 -> Vector(0), createEvent-0 -> Vector(0), getAllMessageOFAConversation-0 -> Vector(0), getStudentInfo-0 -> Vector(0), applyForJob-0 -> Vector(0), createProfessionalExperience-0 -> Vector(0), addMessageInAConversation-0 -> Vector(0), getStudentsRegisteredInAEvent-0 -> Vector(0), getStudentAllEducation-0 -> Vector(0), getCompanyInfo-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-02 19:02:47,651] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-02 19:02:47,652] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-02 19:03:01,645] INFO [Controller id=0] New topics: [Set(listCompanyPostedJobs)], deleted topics: [Set()], new partition replica assignment [Map(listCompanyPostedJobs-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:03:01,645] INFO [Controller id=0] New partition creation callback for listCompanyPostedJobs-0 (kafka.controller.KafkaController)
[2020-04-02 19:03:13,764] INFO [Controller id=0] New topics: [Set(login)], deleted topics: [Set()], new partition replica assignment [Map(login-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:03:13,764] INFO [Controller id=0] New partition creation callback for login-0 (kafka.controller.KafkaController)
[2020-04-02 19:03:26,481] INFO [Controller id=0] New topics: [Set(passport)], deleted topics: [Set()], new partition replica assignment [Map(passport-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:03:26,481] INFO [Controller id=0] New partition creation callback for passport-0 (kafka.controller.KafkaController)
[2020-04-02 19:03:38,441] INFO [Controller id=0] New topics: [Set(registerForEvent)], deleted topics: [Set()], new partition replica assignment [Map(registerForEvent-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:03:38,441] INFO [Controller id=0] New partition creation callback for registerForEvent-0 (kafka.controller.KafkaController)
[2020-04-02 19:03:50,746] INFO [Controller id=0] New topics: [Set(response_topic)], deleted topics: [Set()], new partition replica assignment [Map(response_topic-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:03:50,747] INFO [Controller id=0] New partition creation callback for response_topic-0 (kafka.controller.KafkaController)
[2020-04-02 19:04:02,641] INFO [Controller id=0] New topics: [Set(searchStudents)], deleted topics: [Set()], new partition replica assignment [Map(searchStudents-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:04:02,641] INFO [Controller id=0] New partition creation callback for searchStudents-0 (kafka.controller.KafkaController)
[2020-04-02 19:04:14,491] INFO [Controller id=0] New topics: [Set(signup)], deleted topics: [Set()], new partition replica assignment [Map(signup-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:04:14,491] INFO [Controller id=0] New partition creation callback for signup-0 (kafka.controller.KafkaController)
[2020-04-02 19:04:26,268] INFO [Controller id=0] New topics: [Set(updateAppliedStudentJobStatus)], deleted topics: [Set()], new partition replica assignment [Map(updateAppliedStudentJobStatus-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:04:26,269] INFO [Controller id=0] New partition creation callback for updateAppliedStudentJobStatus-0 (kafka.controller.KafkaController)
[2020-04-02 19:04:38,025] INFO [Controller id=0] New topics: [Set(updateCompanyProfile)], deleted topics: [Set()], new partition replica assignment [Map(updateCompanyProfile-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:04:38,025] INFO [Controller id=0] New partition creation callback for updateCompanyProfile-0 (kafka.controller.KafkaController)
[2020-04-02 19:04:49,813] INFO [Controller id=0] New topics: [Set(updateEducation)], deleted topics: [Set()], new partition replica assignment [Map(updateEducation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:04:49,813] INFO [Controller id=0] New partition creation callback for updateEducation-0 (kafka.controller.KafkaController)
[2020-04-02 19:05:01,784] INFO [Controller id=0] New topics: [Set(updateProfessionalExperience)], deleted topics: [Set()], new partition replica assignment [Map(updateProfessionalExperience-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:05:01,784] INFO [Controller id=0] New partition creation callback for updateProfessionalExperience-0 (kafka.controller.KafkaController)
[2020-04-02 19:05:13,810] INFO [Controller id=0] New topics: [Set(updateSkills)], deleted topics: [Set()], new partition replica assignment [Map(updateSkills-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:05:13,810] INFO [Controller id=0] New partition creation callback for updateSkills-0 (kafka.controller.KafkaController)
[2020-04-02 19:05:26,686] INFO [Controller id=0] New topics: [Set(updateStudentProfile)], deleted topics: [Set()], new partition replica assignment [Map(updateStudentProfile-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 19:05:26,686] INFO [Controller id=0] New partition creation callback for updateStudentProfile-0 (kafka.controller.KafkaController)
[2020-04-02 19:07:47,691] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-02 19:07:47,693] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(getAppliedJobs-0 -> Vector(0), createJobPost-0 -> Vector(0), updateEducation-0 -> Vector(0), deleteProfessionalExperience-0 -> Vector(0), listCompanyCreatedEvents-0 -> Vector(0), getRegisteredEvents-0 -> Vector(0), registerForEvent-0 -> Vector(0), getPostedJobs-0 -> Vector(0), getAllConversationsOfAUser-0 -> Vector(0), deleteEducation-0 -> Vector(0), searchStudents-0 -> Vector(0), updateSkills-0 -> Vector(0), getSearchedEvent-0 -> Vector(0), createEducation-0 -> Vector(0), createEvent-0 -> Vector(0), getAllMessageOFAConversation-0 -> Vector(0), passport-0 -> Vector(0), updateCompanyProfile-0 -> Vector(0), signup-0 -> Vector(0), listCompanyPostedJobs-0 -> Vector(0), getStudentInfo-0 -> Vector(0), applyForJob-0 -> Vector(0), createProfessionalExperience-0 -> Vector(0), login-0 -> Vector(0), addMessageInAConversation-0 -> Vector(0), updateAppliedStudentJobStatus-0 -> Vector(0), updateStudentProfile-0 -> Vector(0), getStudentsRegisteredInAEvent-0 -> Vector(0), getStudentAllEducation-0 -> Vector(0), response_topic-0 -> Vector(0), getCompanyInfo-0 -> Vector(0), updateProfessionalExperience-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-02 19:07:47,693] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-02 19:07:47,693] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-02 19:12:47,709] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-02 19:12:47,711] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(getAppliedJobs-0 -> Vector(0), createJobPost-0 -> Vector(0), updateEducation-0 -> Vector(0), deleteProfessionalExperience-0 -> Vector(0), listCompanyCreatedEvents-0 -> Vector(0), getRegisteredEvents-0 -> Vector(0), registerForEvent-0 -> Vector(0), getPostedJobs-0 -> Vector(0), getAllConversationsOfAUser-0 -> Vector(0), deleteEducation-0 -> Vector(0), searchStudents-0 -> Vector(0), updateSkills-0 -> Vector(0), getSearchedEvent-0 -> Vector(0), createEducation-0 -> Vector(0), createEvent-0 -> Vector(0), getAllMessageOFAConversation-0 -> Vector(0), passport-0 -> Vector(0), updateCompanyProfile-0 -> Vector(0), signup-0 -> Vector(0), listCompanyPostedJobs-0 -> Vector(0), getStudentInfo-0 -> Vector(0), applyForJob-0 -> Vector(0), createProfessionalExperience-0 -> Vector(0), login-0 -> Vector(0), addMessageInAConversation-0 -> Vector(0), updateAppliedStudentJobStatus-0 -> Vector(0), updateStudentProfile-0 -> Vector(0), getStudentsRegisteredInAEvent-0 -> Vector(0), getStudentAllEducation-0 -> Vector(0), response_topic-0 -> Vector(0), getCompanyInfo-0 -> Vector(0), updateProfessionalExperience-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-02 19:12:47,712] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-02 19:12:47,712] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-02 19:15:39,021] DEBUG [Controller id=0] Delete topics listener fired for topics addMessageInAConversation to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:15:39,022] INFO [Controller id=0] Starting topic deletion for topics addMessageInAConversation (kafka.controller.KafkaController)
[2020-04-02 19:15:39,024] INFO [Topic Deletion Manager 0], Handling deletion for topics addMessageInAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:39,028] INFO [Topic Deletion Manager 0], Deletion of topic addMessageInAConversation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:39,029] INFO [Topic Deletion Manager 0], Topic deletion callback for addMessageInAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:39,032] INFO [Topic Deletion Manager 0], Partition deletion callback for addMessageInAConversation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:39,032] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.232.130.145:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-02 19:15:39,050] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:15:39,051] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:15:39,052] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:39,054] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:15:39,054] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:15:39,095] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@237cacba (kafka.controller.KafkaController)
[2020-04-02 19:15:39,098] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:39,099] INFO [Topic Deletion Manager 0], Handling deletion for topics addMessageInAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:39,124] INFO [Topic Deletion Manager 0], Deletion of topic addMessageInAConversation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:39,125] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:15:39,126] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:15:50,630] DEBUG [Controller id=0] Delete topics listener fired for topics applyForJob to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:15:50,630] INFO [Controller id=0] Starting topic deletion for topics applyForJob (kafka.controller.KafkaController)
[2020-04-02 19:15:50,630] INFO [Topic Deletion Manager 0], Handling deletion for topics applyForJob (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:50,630] INFO [Topic Deletion Manager 0], Deletion of topic applyForJob (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:50,631] INFO [Topic Deletion Manager 0], Topic deletion callback for applyForJob (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:50,631] INFO [Topic Deletion Manager 0], Partition deletion callback for applyForJob-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:50,635] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:15:50,635] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:15:50,635] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:50,635] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:15:50,635] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:15:50,652] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@461793d0 (kafka.controller.KafkaController)
[2020-04-02 19:15:50,652] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:50,652] INFO [Topic Deletion Manager 0], Handling deletion for topics applyForJob (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:50,660] INFO [Topic Deletion Manager 0], Deletion of topic applyForJob successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:15:50,661] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:15:50,661] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:16:02,216] DEBUG [Controller id=0] Delete topics listener fired for topics createEducation to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:16:02,216] INFO [Controller id=0] Starting topic deletion for topics createEducation (kafka.controller.KafkaController)
[2020-04-02 19:16:02,216] INFO [Topic Deletion Manager 0], Handling deletion for topics createEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:02,217] INFO [Topic Deletion Manager 0], Deletion of topic createEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:02,217] INFO [Topic Deletion Manager 0], Topic deletion callback for createEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:02,217] INFO [Topic Deletion Manager 0], Partition deletion callback for createEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:02,220] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:02,221] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:02,221] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:02,221] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:02,221] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:02,236] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4efe5474 (kafka.controller.KafkaController)
[2020-04-02 19:16:02,236] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:02,237] INFO [Topic Deletion Manager 0], Handling deletion for topics createEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:02,244] INFO [Topic Deletion Manager 0], Deletion of topic createEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:02,245] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:16:02,247] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:16:13,772] DEBUG [Controller id=0] Delete topics listener fired for topics createEvent to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:16:13,772] INFO [Controller id=0] Starting topic deletion for topics createEvent (kafka.controller.KafkaController)
[2020-04-02 19:16:13,772] INFO [Topic Deletion Manager 0], Handling deletion for topics createEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:13,773] INFO [Topic Deletion Manager 0], Deletion of topic createEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:13,773] INFO [Topic Deletion Manager 0], Topic deletion callback for createEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:13,773] INFO [Topic Deletion Manager 0], Partition deletion callback for createEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:13,776] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:13,776] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:13,776] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:13,776] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:13,776] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:13,792] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@21c78497 (kafka.controller.KafkaController)
[2020-04-02 19:16:13,792] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:13,792] INFO [Topic Deletion Manager 0], Handling deletion for topics createEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:13,799] INFO [Topic Deletion Manager 0], Deletion of topic createEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:13,800] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:16:13,800] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:16:25,330] DEBUG [Controller id=0] Delete topics listener fired for topics createJobPost to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:16:25,330] INFO [Controller id=0] Starting topic deletion for topics createJobPost (kafka.controller.KafkaController)
[2020-04-02 19:16:25,330] INFO [Topic Deletion Manager 0], Handling deletion for topics createJobPost (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:25,331] INFO [Topic Deletion Manager 0], Deletion of topic createJobPost (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:25,331] INFO [Topic Deletion Manager 0], Topic deletion callback for createJobPost (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:25,331] INFO [Topic Deletion Manager 0], Partition deletion callback for createJobPost-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:25,335] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:25,335] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:25,335] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:25,336] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:25,336] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:25,357] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@14894c6e (kafka.controller.KafkaController)
[2020-04-02 19:16:25,358] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:25,358] INFO [Topic Deletion Manager 0], Handling deletion for topics createJobPost (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:25,366] INFO [Topic Deletion Manager 0], Deletion of topic createJobPost successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:25,367] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:16:25,369] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:16:36,937] DEBUG [Controller id=0] Delete topics listener fired for topics createProfessionalExperience to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:16:36,938] INFO [Controller id=0] Starting topic deletion for topics createProfessionalExperience (kafka.controller.KafkaController)
[2020-04-02 19:16:36,938] INFO [Topic Deletion Manager 0], Handling deletion for topics createProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:36,938] INFO [Topic Deletion Manager 0], Deletion of topic createProfessionalExperience (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:36,938] INFO [Topic Deletion Manager 0], Topic deletion callback for createProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:36,938] INFO [Topic Deletion Manager 0], Partition deletion callback for createProfessionalExperience-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:36,941] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:36,941] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:36,941] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:36,942] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:36,942] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:36,955] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@6e7ad43c (kafka.controller.KafkaController)
[2020-04-02 19:16:36,955] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:36,955] INFO [Topic Deletion Manager 0], Handling deletion for topics createProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:36,962] INFO [Topic Deletion Manager 0], Deletion of topic createProfessionalExperience successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:36,963] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:16:36,963] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:16:48,495] DEBUG [Controller id=0] Delete topics listener fired for topics deleteEducation to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:16:48,495] INFO [Controller id=0] Starting topic deletion for topics deleteEducation (kafka.controller.KafkaController)
[2020-04-02 19:16:48,495] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:48,496] INFO [Topic Deletion Manager 0], Deletion of topic deleteEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:48,496] INFO [Topic Deletion Manager 0], Topic deletion callback for deleteEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:48,496] INFO [Topic Deletion Manager 0], Partition deletion callback for deleteEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:48,499] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:48,499] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:48,500] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:48,500] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:48,500] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:16:48,514] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@529b7073 (kafka.controller.KafkaController)
[2020-04-02 19:16:48,514] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:48,514] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:48,523] INFO [Topic Deletion Manager 0], Deletion of topic deleteEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:16:48,524] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:16:48,525] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:17:00,088] DEBUG [Controller id=0] Delete topics listener fired for topics deleteProfessionalExperience to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:17:00,089] INFO [Controller id=0] Starting topic deletion for topics deleteProfessionalExperience (kafka.controller.KafkaController)
[2020-04-02 19:17:00,089] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:00,089] INFO [Topic Deletion Manager 0], Deletion of topic deleteProfessionalExperience (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:00,089] INFO [Topic Deletion Manager 0], Topic deletion callback for deleteProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:00,090] INFO [Topic Deletion Manager 0], Partition deletion callback for deleteProfessionalExperience-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:00,096] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:00,096] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:00,096] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:00,097] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:00,097] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:00,110] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4fe5b58b (kafka.controller.KafkaController)
[2020-04-02 19:17:00,110] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:00,110] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:00,118] INFO [Topic Deletion Manager 0], Deletion of topic deleteProfessionalExperience successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:00,119] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:17:00,119] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:17:11,673] DEBUG [Controller id=0] Delete topics listener fired for topics getAllConversationsOfAUser to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:17:11,674] INFO [Controller id=0] Starting topic deletion for topics getAllConversationsOfAUser (kafka.controller.KafkaController)
[2020-04-02 19:17:11,674] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllConversationsOfAUser (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:11,674] INFO [Topic Deletion Manager 0], Deletion of topic getAllConversationsOfAUser (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:11,674] INFO [Topic Deletion Manager 0], Topic deletion callback for getAllConversationsOfAUser (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:11,675] INFO [Topic Deletion Manager 0], Partition deletion callback for getAllConversationsOfAUser-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:11,678] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:11,678] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:11,678] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:11,679] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:11,679] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:11,691] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@11516a25 (kafka.controller.KafkaController)
[2020-04-02 19:17:11,691] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:11,692] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllConversationsOfAUser (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:11,700] INFO [Topic Deletion Manager 0], Deletion of topic getAllConversationsOfAUser successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:11,701] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:17:11,701] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:17:23,285] DEBUG [Controller id=0] Delete topics listener fired for topics getAllMessageOFAConversation to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:17:23,285] INFO [Controller id=0] Starting topic deletion for topics getAllMessageOFAConversation (kafka.controller.KafkaController)
[2020-04-02 19:17:23,285] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllMessageOFAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:23,285] INFO [Topic Deletion Manager 0], Deletion of topic getAllMessageOFAConversation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:23,285] INFO [Topic Deletion Manager 0], Topic deletion callback for getAllMessageOFAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:23,286] INFO [Topic Deletion Manager 0], Partition deletion callback for getAllMessageOFAConversation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:23,289] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:23,289] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:23,289] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:23,290] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:23,290] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:23,304] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@29328707 (kafka.controller.KafkaController)
[2020-04-02 19:17:23,304] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:23,304] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllMessageOFAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:23,311] INFO [Topic Deletion Manager 0], Deletion of topic getAllMessageOFAConversation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:23,312] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:17:23,312] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:17:34,852] DEBUG [Controller id=0] Delete topics listener fired for topics getAppliedJobs to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:17:34,852] INFO [Controller id=0] Starting topic deletion for topics getAppliedJobs (kafka.controller.KafkaController)
[2020-04-02 19:17:34,852] INFO [Topic Deletion Manager 0], Handling deletion for topics getAppliedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:34,852] INFO [Topic Deletion Manager 0], Deletion of topic getAppliedJobs (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:34,853] INFO [Topic Deletion Manager 0], Topic deletion callback for getAppliedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:34,853] INFO [Topic Deletion Manager 0], Partition deletion callback for getAppliedJobs-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:34,856] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:34,856] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:34,856] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:34,856] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:34,856] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:34,872] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@202362ba (kafka.controller.KafkaController)
[2020-04-02 19:17:34,872] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:34,873] INFO [Topic Deletion Manager 0], Handling deletion for topics getAppliedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:34,882] INFO [Topic Deletion Manager 0], Deletion of topic getAppliedJobs successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:34,883] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:17:34,883] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:17:46,492] DEBUG [Controller id=0] Delete topics listener fired for topics getCompanyInfo to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:17:46,493] INFO [Controller id=0] Starting topic deletion for topics getCompanyInfo (kafka.controller.KafkaController)
[2020-04-02 19:17:46,493] INFO [Topic Deletion Manager 0], Handling deletion for topics getCompanyInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:46,493] INFO [Topic Deletion Manager 0], Deletion of topic getCompanyInfo (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:46,493] INFO [Topic Deletion Manager 0], Topic deletion callback for getCompanyInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:46,493] INFO [Topic Deletion Manager 0], Partition deletion callback for getCompanyInfo-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:46,498] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:46,498] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:46,498] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:46,498] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:46,498] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:46,511] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4208d2d8 (kafka.controller.KafkaController)
[2020-04-02 19:17:46,511] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:46,511] INFO [Topic Deletion Manager 0], Handling deletion for topics getCompanyInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:46,519] INFO [Topic Deletion Manager 0], Deletion of topic getCompanyInfo successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:46,519] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:17:46,520] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:17:47,726] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-02 19:17:47,727] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(updateEducation-0 -> Vector(0), listCompanyCreatedEvents-0 -> Vector(0), getRegisteredEvents-0 -> Vector(0), registerForEvent-0 -> Vector(0), getPostedJobs-0 -> Vector(0), searchStudents-0 -> Vector(0), getSearchedEvent-0 -> Vector(0), updateSkills-0 -> Vector(0), passport-0 -> Vector(0), updateCompanyProfile-0 -> Vector(0), signup-0 -> Vector(0), getStudentInfo-0 -> Vector(0), login-0 -> Vector(0), listCompanyPostedJobs-0 -> Vector(0), updateAppliedStudentJobStatus-0 -> Vector(0), updateStudentProfile-0 -> Vector(0), getStudentsRegisteredInAEvent-0 -> Vector(0), getStudentAllEducation-0 -> Vector(0), response_topic-0 -> Vector(0), updateProfessionalExperience-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-02 19:17:47,727] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-02 19:17:47,727] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-02 19:17:58,061] DEBUG [Controller id=0] Delete topics listener fired for topics getPostedJobs to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:17:58,062] INFO [Controller id=0] Starting topic deletion for topics getPostedJobs (kafka.controller.KafkaController)
[2020-04-02 19:17:58,062] INFO [Topic Deletion Manager 0], Handling deletion for topics getPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:58,062] INFO [Topic Deletion Manager 0], Deletion of topic getPostedJobs (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:58,062] INFO [Topic Deletion Manager 0], Topic deletion callback for getPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:58,062] INFO [Topic Deletion Manager 0], Partition deletion callback for getPostedJobs-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:58,065] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:58,065] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:58,065] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:58,066] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:58,066] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:17:58,080] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@589288fe (kafka.controller.KafkaController)
[2020-04-02 19:17:58,080] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:58,080] INFO [Topic Deletion Manager 0], Handling deletion for topics getPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:58,089] INFO [Topic Deletion Manager 0], Deletion of topic getPostedJobs successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:17:58,090] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:17:58,091] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:18:09,664] DEBUG [Controller id=0] Delete topics listener fired for topics getRegisteredEvents to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:18:09,664] INFO [Controller id=0] Starting topic deletion for topics getRegisteredEvents (kafka.controller.KafkaController)
[2020-04-02 19:18:09,664] INFO [Topic Deletion Manager 0], Handling deletion for topics getRegisteredEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:09,665] INFO [Topic Deletion Manager 0], Deletion of topic getRegisteredEvents (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:09,665] INFO [Topic Deletion Manager 0], Topic deletion callback for getRegisteredEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:09,665] INFO [Topic Deletion Manager 0], Partition deletion callback for getRegisteredEvents-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:09,668] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:09,668] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:09,668] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:09,668] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:09,668] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:09,681] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@65a53654 (kafka.controller.KafkaController)
[2020-04-02 19:18:09,681] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:09,681] INFO [Topic Deletion Manager 0], Handling deletion for topics getRegisteredEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:09,689] INFO [Topic Deletion Manager 0], Deletion of topic getRegisteredEvents successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:09,690] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:18:09,691] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:18:21,212] DEBUG [Controller id=0] Delete topics listener fired for topics getSearchedEvent to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:18:21,212] INFO [Controller id=0] Starting topic deletion for topics getSearchedEvent (kafka.controller.KafkaController)
[2020-04-02 19:18:21,212] INFO [Topic Deletion Manager 0], Handling deletion for topics getSearchedEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:21,212] INFO [Topic Deletion Manager 0], Deletion of topic getSearchedEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:21,212] INFO [Topic Deletion Manager 0], Topic deletion callback for getSearchedEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:21,213] INFO [Topic Deletion Manager 0], Partition deletion callback for getSearchedEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:21,216] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:21,216] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:21,216] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:21,217] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:21,217] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:21,228] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@5e28bee8 (kafka.controller.KafkaController)
[2020-04-02 19:18:21,228] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:21,228] INFO [Topic Deletion Manager 0], Handling deletion for topics getSearchedEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:21,234] INFO [Topic Deletion Manager 0], Deletion of topic getSearchedEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:21,235] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:18:21,236] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:18:32,791] DEBUG [Controller id=0] Delete topics listener fired for topics getStudentAllEducation to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:18:32,791] INFO [Controller id=0] Starting topic deletion for topics getStudentAllEducation (kafka.controller.KafkaController)
[2020-04-02 19:18:32,792] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentAllEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:32,792] INFO [Topic Deletion Manager 0], Deletion of topic getStudentAllEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:32,792] INFO [Topic Deletion Manager 0], Topic deletion callback for getStudentAllEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:32,792] INFO [Topic Deletion Manager 0], Partition deletion callback for getStudentAllEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:32,796] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:32,796] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:32,796] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:32,796] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:32,796] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:32,808] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@5a3229e7 (kafka.controller.KafkaController)
[2020-04-02 19:18:32,808] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:32,808] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentAllEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:32,815] INFO [Topic Deletion Manager 0], Deletion of topic getStudentAllEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:32,816] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:18:32,817] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:18:44,410] DEBUG [Controller id=0] Delete topics listener fired for topics getStudentInfo to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:18:44,410] INFO [Controller id=0] Starting topic deletion for topics getStudentInfo (kafka.controller.KafkaController)
[2020-04-02 19:18:44,410] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:44,411] INFO [Topic Deletion Manager 0], Deletion of topic getStudentInfo (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:44,411] INFO [Topic Deletion Manager 0], Topic deletion callback for getStudentInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:44,411] INFO [Topic Deletion Manager 0], Partition deletion callback for getStudentInfo-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:44,415] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:44,415] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:44,415] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:44,415] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:44,415] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:44,430] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@162b8f27 (kafka.controller.KafkaController)
[2020-04-02 19:18:44,430] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:44,430] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:44,437] INFO [Topic Deletion Manager 0], Deletion of topic getStudentInfo successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:44,438] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:18:44,439] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:18:55,968] DEBUG [Controller id=0] Delete topics listener fired for topics getStudentsRegisteredInAEvent to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:18:55,968] INFO [Controller id=0] Starting topic deletion for topics getStudentsRegisteredInAEvent (kafka.controller.KafkaController)
[2020-04-02 19:18:55,968] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentsRegisteredInAEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:55,969] INFO [Topic Deletion Manager 0], Deletion of topic getStudentsRegisteredInAEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:55,969] INFO [Topic Deletion Manager 0], Topic deletion callback for getStudentsRegisteredInAEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:55,969] INFO [Topic Deletion Manager 0], Partition deletion callback for getStudentsRegisteredInAEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:55,974] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:55,974] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:55,974] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:55,974] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:55,974] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:18:55,986] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@5a701c20 (kafka.controller.KafkaController)
[2020-04-02 19:18:55,986] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:55,986] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentsRegisteredInAEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:55,991] INFO [Topic Deletion Manager 0], Deletion of topic getStudentsRegisteredInAEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:18:55,991] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:18:55,992] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:19:07,547] DEBUG [Controller id=0] Delete topics listener fired for topics listCompanyCreatedEvents to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:19:07,547] INFO [Controller id=0] Starting topic deletion for topics listCompanyCreatedEvents (kafka.controller.KafkaController)
[2020-04-02 19:19:07,547] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyCreatedEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:07,547] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyCreatedEvents (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:07,547] INFO [Topic Deletion Manager 0], Topic deletion callback for listCompanyCreatedEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:07,548] INFO [Topic Deletion Manager 0], Partition deletion callback for listCompanyCreatedEvents-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:07,552] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:07,552] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:07,552] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:07,552] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:07,552] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:07,569] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@41342678 (kafka.controller.KafkaController)
[2020-04-02 19:19:07,569] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:07,569] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyCreatedEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:07,574] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyCreatedEvents successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:07,574] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:19:07,575] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:19:19,139] DEBUG [Controller id=0] Delete topics listener fired for topics listCompanyPostedJobs to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:19:19,139] INFO [Controller id=0] Starting topic deletion for topics listCompanyPostedJobs (kafka.controller.KafkaController)
[2020-04-02 19:19:19,140] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:19,140] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyPostedJobs (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:19,140] INFO [Topic Deletion Manager 0], Topic deletion callback for listCompanyPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:19,140] INFO [Topic Deletion Manager 0], Partition deletion callback for listCompanyPostedJobs-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:19,142] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:19,142] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:19,142] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:19,143] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:19,143] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:19,153] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@a8242a8 (kafka.controller.KafkaController)
[2020-04-02 19:19:19,153] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:19,154] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:19,159] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyPostedJobs successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:19,160] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:19:19,161] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:19:30,711] DEBUG [Controller id=0] Delete topics listener fired for topics login to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:19:30,711] INFO [Controller id=0] Starting topic deletion for topics login (kafka.controller.KafkaController)
[2020-04-02 19:19:30,711] INFO [Topic Deletion Manager 0], Handling deletion for topics login (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:30,711] INFO [Topic Deletion Manager 0], Deletion of topic login (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:30,711] INFO [Topic Deletion Manager 0], Topic deletion callback for login (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:30,712] INFO [Topic Deletion Manager 0], Partition deletion callback for login-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:30,717] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:30,717] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=login,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:30,717] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=login,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:30,717] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=login,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:30,717] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:30,733] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@401ab668 (kafka.controller.KafkaController)
[2020-04-02 19:19:30,733] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=login,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:30,733] INFO [Topic Deletion Manager 0], Handling deletion for topics login (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:30,741] INFO [Topic Deletion Manager 0], Deletion of topic login successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:30,742] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:19:30,742] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:19:42,280] DEBUG [Controller id=0] Delete topics listener fired for topics passport to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:19:42,280] INFO [Controller id=0] Starting topic deletion for topics passport (kafka.controller.KafkaController)
[2020-04-02 19:19:42,280] INFO [Topic Deletion Manager 0], Handling deletion for topics passport (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:42,281] INFO [Topic Deletion Manager 0], Deletion of topic passport (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:42,281] INFO [Topic Deletion Manager 0], Topic deletion callback for passport (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:42,281] INFO [Topic Deletion Manager 0], Partition deletion callback for passport-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:42,284] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:42,284] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=passport,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:42,284] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=passport,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:42,285] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=passport,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:42,285] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:42,297] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@1ad13357 (kafka.controller.KafkaController)
[2020-04-02 19:19:42,297] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=passport,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:42,298] INFO [Topic Deletion Manager 0], Handling deletion for topics passport (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:42,305] INFO [Topic Deletion Manager 0], Deletion of topic passport successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:42,306] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:19:42,307] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:19:53,838] DEBUG [Controller id=0] Delete topics listener fired for topics registerForEvent to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:19:53,838] INFO [Controller id=0] Starting topic deletion for topics registerForEvent (kafka.controller.KafkaController)
[2020-04-02 19:19:53,838] INFO [Topic Deletion Manager 0], Handling deletion for topics registerForEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:53,839] INFO [Topic Deletion Manager 0], Deletion of topic registerForEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:53,839] INFO [Topic Deletion Manager 0], Topic deletion callback for registerForEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:53,839] INFO [Topic Deletion Manager 0], Partition deletion callback for registerForEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:53,841] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:53,841] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:53,841] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:53,842] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:53,842] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:19:53,854] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@7a36d193 (kafka.controller.KafkaController)
[2020-04-02 19:19:53,854] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:53,854] INFO [Topic Deletion Manager 0], Handling deletion for topics registerForEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:53,861] INFO [Topic Deletion Manager 0], Deletion of topic registerForEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:19:53,862] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:19:53,862] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:20:05,583] DEBUG [Controller id=0] Delete topics listener fired for topics response_topic to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:20:05,584] INFO [Controller id=0] Starting topic deletion for topics response_topic (kafka.controller.KafkaController)
[2020-04-02 19:20:05,584] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:05,584] INFO [Topic Deletion Manager 0], Deletion of topic response_topic (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:05,584] INFO [Topic Deletion Manager 0], Topic deletion callback for response_topic (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:05,584] INFO [Topic Deletion Manager 0], Partition deletion callback for response_topic-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:05,587] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:05,587] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:05,587] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:05,587] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:05,587] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:05,599] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@62395b7f (kafka.controller.KafkaController)
[2020-04-02 19:20:05,599] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:05,600] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:05,611] INFO [Topic Deletion Manager 0], Deletion of topic response_topic successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:05,612] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:20:05,612] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:20:17,179] DEBUG [Controller id=0] Delete topics listener fired for topics searchStudents to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:20:17,179] INFO [Controller id=0] Starting topic deletion for topics searchStudents (kafka.controller.KafkaController)
[2020-04-02 19:20:17,179] INFO [Topic Deletion Manager 0], Handling deletion for topics searchStudents (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:17,179] INFO [Topic Deletion Manager 0], Deletion of topic searchStudents (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:17,179] INFO [Topic Deletion Manager 0], Topic deletion callback for searchStudents (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:17,180] INFO [Topic Deletion Manager 0], Partition deletion callback for searchStudents-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:17,182] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:17,182] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:17,182] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:17,183] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:17,183] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:17,204] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@770508a6 (kafka.controller.KafkaController)
[2020-04-02 19:20:17,204] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:17,204] INFO [Topic Deletion Manager 0], Handling deletion for topics searchStudents (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:17,211] INFO [Topic Deletion Manager 0], Deletion of topic searchStudents successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:17,212] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:20:17,212] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:20:28,761] DEBUG [Controller id=0] Delete topics listener fired for topics signup to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:20:28,761] INFO [Controller id=0] Starting topic deletion for topics signup (kafka.controller.KafkaController)
[2020-04-02 19:20:28,761] INFO [Topic Deletion Manager 0], Handling deletion for topics signup (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:28,761] INFO [Topic Deletion Manager 0], Deletion of topic signup (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:28,761] INFO [Topic Deletion Manager 0], Topic deletion callback for signup (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:28,762] INFO [Topic Deletion Manager 0], Partition deletion callback for signup-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:28,765] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:28,765] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=signup,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:28,765] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=signup,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:28,766] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=signup,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:28,766] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:28,776] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@64ddd69a (kafka.controller.KafkaController)
[2020-04-02 19:20:28,777] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=signup,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:28,777] INFO [Topic Deletion Manager 0], Handling deletion for topics signup (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:28,783] INFO [Topic Deletion Manager 0], Deletion of topic signup successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:28,784] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:20:28,785] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:20:40,329] DEBUG [Controller id=0] Delete topics listener fired for topics updateAppliedStudentJobStatus to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:20:40,329] INFO [Controller id=0] Starting topic deletion for topics updateAppliedStudentJobStatus (kafka.controller.KafkaController)
[2020-04-02 19:20:40,329] INFO [Topic Deletion Manager 0], Handling deletion for topics updateAppliedStudentJobStatus (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:40,329] INFO [Topic Deletion Manager 0], Deletion of topic updateAppliedStudentJobStatus (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:40,330] INFO [Topic Deletion Manager 0], Topic deletion callback for updateAppliedStudentJobStatus (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:40,330] INFO [Topic Deletion Manager 0], Partition deletion callback for updateAppliedStudentJobStatus-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:40,332] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:40,332] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:40,333] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:40,333] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:40,333] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:40,342] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@282b29db (kafka.controller.KafkaController)
[2020-04-02 19:20:40,342] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:40,342] INFO [Topic Deletion Manager 0], Handling deletion for topics updateAppliedStudentJobStatus (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:40,349] INFO [Topic Deletion Manager 0], Deletion of topic updateAppliedStudentJobStatus successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:40,350] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:20:40,350] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:20:51,886] DEBUG [Controller id=0] Delete topics listener fired for topics updateCompanyProfile to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:20:51,886] INFO [Controller id=0] Starting topic deletion for topics updateCompanyProfile (kafka.controller.KafkaController)
[2020-04-02 19:20:51,887] INFO [Topic Deletion Manager 0], Handling deletion for topics updateCompanyProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:51,887] INFO [Topic Deletion Manager 0], Deletion of topic updateCompanyProfile (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:51,887] INFO [Topic Deletion Manager 0], Topic deletion callback for updateCompanyProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:51,887] INFO [Topic Deletion Manager 0], Partition deletion callback for updateCompanyProfile-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:51,890] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:51,890] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:51,890] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:51,891] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:51,891] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:20:51,900] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@616d02 (kafka.controller.KafkaController)
[2020-04-02 19:20:51,900] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:51,900] INFO [Topic Deletion Manager 0], Handling deletion for topics updateCompanyProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:51,906] INFO [Topic Deletion Manager 0], Deletion of topic updateCompanyProfile successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:20:51,907] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:20:51,907] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:21:03,486] DEBUG [Controller id=0] Delete topics listener fired for topics updateEducation to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:21:03,486] INFO [Controller id=0] Starting topic deletion for topics updateEducation (kafka.controller.KafkaController)
[2020-04-02 19:21:03,486] INFO [Topic Deletion Manager 0], Handling deletion for topics updateEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:03,486] INFO [Topic Deletion Manager 0], Deletion of topic updateEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:03,486] INFO [Topic Deletion Manager 0], Topic deletion callback for updateEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:03,486] INFO [Topic Deletion Manager 0], Partition deletion callback for updateEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:03,488] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:03,488] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:03,489] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:03,489] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:03,489] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:03,499] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@5ffe0590 (kafka.controller.KafkaController)
[2020-04-02 19:21:03,499] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:03,499] INFO [Topic Deletion Manager 0], Handling deletion for topics updateEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:03,505] INFO [Topic Deletion Manager 0], Deletion of topic updateEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:03,506] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:21:03,506] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:21:15,047] DEBUG [Controller id=0] Delete topics listener fired for topics updateProfessionalExperience to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:21:15,047] INFO [Controller id=0] Starting topic deletion for topics updateProfessionalExperience (kafka.controller.KafkaController)
[2020-04-02 19:21:15,047] INFO [Topic Deletion Manager 0], Handling deletion for topics updateProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:15,048] INFO [Topic Deletion Manager 0], Deletion of topic updateProfessionalExperience (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:15,048] INFO [Topic Deletion Manager 0], Topic deletion callback for updateProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:15,048] INFO [Topic Deletion Manager 0], Partition deletion callback for updateProfessionalExperience-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:15,050] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:15,050] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:15,051] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:15,051] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:15,051] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:15,060] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@551d61f3 (kafka.controller.KafkaController)
[2020-04-02 19:21:15,060] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:15,061] INFO [Topic Deletion Manager 0], Handling deletion for topics updateProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:15,067] INFO [Topic Deletion Manager 0], Deletion of topic updateProfessionalExperience successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:15,068] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:21:15,069] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:21:26,641] DEBUG [Controller id=0] Delete topics listener fired for topics updateSkills to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:21:26,641] INFO [Controller id=0] Starting topic deletion for topics updateSkills (kafka.controller.KafkaController)
[2020-04-02 19:21:26,641] INFO [Topic Deletion Manager 0], Handling deletion for topics updateSkills (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:26,641] INFO [Topic Deletion Manager 0], Deletion of topic updateSkills (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:26,641] INFO [Topic Deletion Manager 0], Topic deletion callback for updateSkills (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:26,642] INFO [Topic Deletion Manager 0], Partition deletion callback for updateSkills-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:26,653] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:26,653] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:26,653] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:26,654] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:26,654] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:26,669] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@2409ef7a (kafka.controller.KafkaController)
[2020-04-02 19:21:26,669] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:26,669] INFO [Topic Deletion Manager 0], Handling deletion for topics updateSkills (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:26,680] INFO [Topic Deletion Manager 0], Deletion of topic updateSkills successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:26,681] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:21:26,681] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:21:38,356] DEBUG [Controller id=0] Delete topics listener fired for topics updateStudentProfile to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:21:38,356] INFO [Controller id=0] Starting topic deletion for topics updateStudentProfile (kafka.controller.KafkaController)
[2020-04-02 19:21:38,356] INFO [Topic Deletion Manager 0], Handling deletion for topics updateStudentProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:38,356] INFO [Topic Deletion Manager 0], Deletion of topic updateStudentProfile (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:38,356] INFO [Topic Deletion Manager 0], Topic deletion callback for updateStudentProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:38,356] INFO [Topic Deletion Manager 0], Partition deletion callback for updateStudentProfile-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:38,359] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:38,359] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:38,359] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:38,359] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:38,359] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 19:21:38,368] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@2f8b8f84 (kafka.controller.KafkaController)
[2020-04-02 19:21:38,368] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:38,368] INFO [Topic Deletion Manager 0], Handling deletion for topics updateStudentProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:38,375] INFO [Topic Deletion Manager 0], Deletion of topic updateStudentProfile successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 19:21:38,375] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 19:21:38,376] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 19:22:47,739] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-02 19:22:47,739] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-02 19:27:47,752] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-02 19:27:47,752] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-02 19:29:29,570] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-04-02 19:29:29,570] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-04-02 19:29:29,571] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-04-02 19:29:29,573] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2020-04-02 19:29:30,373] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-02 19:29:30,373] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-02 19:29:30,373] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-02 19:29:30,373] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-04-02 19:29:30,374] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-02 19:29:30,375] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2020-04-02 19:29:30,375] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2020-04-02 19:29:30,376] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-02 19:29:30,376] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-02 19:29:30,376] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-02 19:29:30,378] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
