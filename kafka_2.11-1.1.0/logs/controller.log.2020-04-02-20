[2020-04-02 20:18:32,922] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-02 20:19:00,490] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-02 20:20:21,201] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-02 20:20:21,233] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2020-04-02 20:20:21,234] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2020-04-02 20:20:21,238] INFO [Controller id=0] Initialized controller epoch to 1 and zk version 0 (kafka.controller.KafkaController)
[2020-04-02 20:20:21,238] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2020-04-02 20:20:21,250] INFO [Controller id=0] Epoch incremented to 2 (kafka.controller.KafkaController)
[2020-04-02 20:20:21,250] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-02 20:20:21,254] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-02 20:20:21,257] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-02 20:20:21,260] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-02 20:20:21,295] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-02 20:20:21,309] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-02 20:20:21,332] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-02 20:20:21,334] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-04-02 20:20:21,338] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-04-02 20:20:21,339] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-02 20:20:21,339] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-02 20:20:21,340] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-02 20:20:21,344] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-02 20:20:21,344] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-02 20:20:21,345] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-02 20:20:21,346] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-02 20:20:21,357] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2020-04-02 20:20:21,358] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2020-04-02 20:20:21,364] INFO [RequestSendThread controllerId=0] Controller 0 connected to sarthaks-mbp.lan:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-02 20:20:21,369] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2020-04-02 20:20:21,369] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2020-04-02 20:20:21,372] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2020-04-02 20:20:21,381] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2020-04-02 20:20:21,381] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-04-02 20:20:21,386] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-02 20:20:21,388] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-02 20:20:21,389] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-02 20:20:21,389] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-02 20:20:21,389] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-04-02 20:20:21,397] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-02 20:20:26,403] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-02 20:20:26,405] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-02 20:22:28,833] INFO [Controller id=0] New topics: [Set(addMessageInAConversation)], deleted topics: [Set()], new partition replica assignment [Map(addMessageInAConversation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:28,835] INFO [Controller id=0] New partition creation callback for addMessageInAConversation-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:30,894] INFO [Controller id=0] New topics: [Set(applyForJob)], deleted topics: [Set()], new partition replica assignment [Map(applyForJob-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:30,894] INFO [Controller id=0] New partition creation callback for applyForJob-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:32,792] INFO [Controller id=0] New topics: [Set(createEducation)], deleted topics: [Set()], new partition replica assignment [Map(createEducation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:32,793] INFO [Controller id=0] New partition creation callback for createEducation-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:34,601] INFO [Controller id=0] New topics: [Set(createEvent)], deleted topics: [Set()], new partition replica assignment [Map(createEvent-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:34,602] INFO [Controller id=0] New partition creation callback for createEvent-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:36,428] INFO [Controller id=0] New topics: [Set(createJobPost)], deleted topics: [Set()], new partition replica assignment [Map(createJobPost-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:36,428] INFO [Controller id=0] New partition creation callback for createJobPost-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:38,251] INFO [Controller id=0] New topics: [Set(createProfessionalExperience)], deleted topics: [Set()], new partition replica assignment [Map(createProfessionalExperience-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:38,251] INFO [Controller id=0] New partition creation callback for createProfessionalExperience-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:40,082] INFO [Controller id=0] New topics: [Set(deleteEducation)], deleted topics: [Set()], new partition replica assignment [Map(deleteEducation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:40,083] INFO [Controller id=0] New partition creation callback for deleteEducation-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:41,875] INFO [Controller id=0] New topics: [Set(deleteProfessionalExperience)], deleted topics: [Set()], new partition replica assignment [Map(deleteProfessionalExperience-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:41,876] INFO [Controller id=0] New partition creation callback for deleteProfessionalExperience-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:43,663] INFO [Controller id=0] New topics: [Set(getAllConversationsOfAUser)], deleted topics: [Set()], new partition replica assignment [Map(getAllConversationsOfAUser-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:43,664] INFO [Controller id=0] New partition creation callback for getAllConversationsOfAUser-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:45,513] INFO [Controller id=0] New topics: [Set(getAllMessageOFAConversation)], deleted topics: [Set()], new partition replica assignment [Map(getAllMessageOFAConversation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:45,513] INFO [Controller id=0] New partition creation callback for getAllMessageOFAConversation-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:47,299] INFO [Controller id=0] New topics: [Set(getAppliedJobs)], deleted topics: [Set()], new partition replica assignment [Map(getAppliedJobs-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:47,300] INFO [Controller id=0] New partition creation callback for getAppliedJobs-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:49,134] INFO [Controller id=0] New topics: [Set(getCompanyInfo)], deleted topics: [Set()], new partition replica assignment [Map(getCompanyInfo-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:49,134] INFO [Controller id=0] New partition creation callback for getCompanyInfo-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:51,025] INFO [Controller id=0] New topics: [Set(getPostedJobs)], deleted topics: [Set()], new partition replica assignment [Map(getPostedJobs-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:51,027] INFO [Controller id=0] New partition creation callback for getPostedJobs-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:52,856] INFO [Controller id=0] New topics: [Set(getRegisteredEvents)], deleted topics: [Set()], new partition replica assignment [Map(getRegisteredEvents-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:52,856] INFO [Controller id=0] New partition creation callback for getRegisteredEvents-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:54,668] INFO [Controller id=0] New topics: [Set(getSearchedEvent)], deleted topics: [Set()], new partition replica assignment [Map(getSearchedEvent-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:54,668] INFO [Controller id=0] New partition creation callback for getSearchedEvent-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:56,533] INFO [Controller id=0] New topics: [Set(getStudentAllEducation)], deleted topics: [Set()], new partition replica assignment [Map(getStudentAllEducation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:56,533] INFO [Controller id=0] New partition creation callback for getStudentAllEducation-0 (kafka.controller.KafkaController)
[2020-04-02 20:22:58,361] INFO [Controller id=0] New topics: [Set(getStudentInfo)], deleted topics: [Set()], new partition replica assignment [Map(getStudentInfo-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:22:58,361] INFO [Controller id=0] New partition creation callback for getStudentInfo-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:00,221] INFO [Controller id=0] New topics: [Set(getStudentsRegisteredInAEvent)], deleted topics: [Set()], new partition replica assignment [Map(getStudentsRegisteredInAEvent-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:00,221] INFO [Controller id=0] New partition creation callback for getStudentsRegisteredInAEvent-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:02,065] INFO [Controller id=0] New topics: [Set(listCompanyCreatedEvents)], deleted topics: [Set()], new partition replica assignment [Map(listCompanyCreatedEvents-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:02,065] INFO [Controller id=0] New partition creation callback for listCompanyCreatedEvents-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:03,866] INFO [Controller id=0] New topics: [Set(listCompanyPostedJobs)], deleted topics: [Set()], new partition replica assignment [Map(listCompanyPostedJobs-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:03,867] INFO [Controller id=0] New partition creation callback for listCompanyPostedJobs-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:05,685] INFO [Controller id=0] New topics: [Set(login)], deleted topics: [Set()], new partition replica assignment [Map(login-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:05,685] INFO [Controller id=0] New partition creation callback for login-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:07,454] INFO [Controller id=0] New topics: [Set(passport)], deleted topics: [Set()], new partition replica assignment [Map(passport-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:07,454] INFO [Controller id=0] New partition creation callback for passport-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:09,243] INFO [Controller id=0] New topics: [Set(registerForEvent)], deleted topics: [Set()], new partition replica assignment [Map(registerForEvent-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:09,243] INFO [Controller id=0] New partition creation callback for registerForEvent-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:11,066] INFO [Controller id=0] New topics: [Set(response_topic)], deleted topics: [Set()], new partition replica assignment [Map(response_topic-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:11,066] INFO [Controller id=0] New partition creation callback for response_topic-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:12,868] INFO [Controller id=0] New topics: [Set(searchStudents)], deleted topics: [Set()], new partition replica assignment [Map(searchStudents-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:12,868] INFO [Controller id=0] New partition creation callback for searchStudents-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:14,682] INFO [Controller id=0] New topics: [Set(signup)], deleted topics: [Set()], new partition replica assignment [Map(signup-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:14,682] INFO [Controller id=0] New partition creation callback for signup-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:16,508] INFO [Controller id=0] New topics: [Set(updateAppliedStudentJobStatus)], deleted topics: [Set()], new partition replica assignment [Map(updateAppliedStudentJobStatus-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:16,508] INFO [Controller id=0] New partition creation callback for updateAppliedStudentJobStatus-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:18,322] INFO [Controller id=0] New topics: [Set(updateCompanyProfile)], deleted topics: [Set()], new partition replica assignment [Map(updateCompanyProfile-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:18,322] INFO [Controller id=0] New partition creation callback for updateCompanyProfile-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:20,160] INFO [Controller id=0] New topics: [Set(updateEducation)], deleted topics: [Set()], new partition replica assignment [Map(updateEducation-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:20,160] INFO [Controller id=0] New partition creation callback for updateEducation-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:22,017] INFO [Controller id=0] New topics: [Set(updateProfessionalExperience)], deleted topics: [Set()], new partition replica assignment [Map(updateProfessionalExperience-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:22,017] INFO [Controller id=0] New partition creation callback for updateProfessionalExperience-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:23,814] INFO [Controller id=0] New topics: [Set(updateSkills)], deleted topics: [Set()], new partition replica assignment [Map(updateSkills-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:23,814] INFO [Controller id=0] New partition creation callback for updateSkills-0 (kafka.controller.KafkaController)
[2020-04-02 20:23:25,655] INFO [Controller id=0] New topics: [Set(updateStudentProfile)], deleted topics: [Set()], new partition replica assignment [Map(updateStudentProfile-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-02 20:23:25,655] INFO [Controller id=0] New partition creation callback for updateStudentProfile-0 (kafka.controller.KafkaController)
[2020-04-02 20:25:26,427] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-02 20:25:26,428] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(getAppliedJobs-0 -> Vector(0), createJobPost-0 -> Vector(0), updateEducation-0 -> Vector(0), deleteProfessionalExperience-0 -> Vector(0), listCompanyCreatedEvents-0 -> Vector(0), getRegisteredEvents-0 -> Vector(0), registerForEvent-0 -> Vector(0), getPostedJobs-0 -> Vector(0), getAllConversationsOfAUser-0 -> Vector(0), deleteEducation-0 -> Vector(0), searchStudents-0 -> Vector(0), updateSkills-0 -> Vector(0), getSearchedEvent-0 -> Vector(0), createEducation-0 -> Vector(0), createEvent-0 -> Vector(0), getAllMessageOFAConversation-0 -> Vector(0), passport-0 -> Vector(0), updateCompanyProfile-0 -> Vector(0), signup-0 -> Vector(0), listCompanyPostedJobs-0 -> Vector(0), getStudentInfo-0 -> Vector(0), applyForJob-0 -> Vector(0), createProfessionalExperience-0 -> Vector(0), login-0 -> Vector(0), addMessageInAConversation-0 -> Vector(0), updateAppliedStudentJobStatus-0 -> Vector(0), updateStudentProfile-0 -> Vector(0), getStudentsRegisteredInAEvent-0 -> Vector(0), getStudentAllEducation-0 -> Vector(0), response_topic-0 -> Vector(0), getCompanyInfo-0 -> Vector(0), updateProfessionalExperience-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-02 20:25:26,431] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-02 20:25:26,432] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-02 20:29:24,288] DEBUG [Controller id=0] Delete topics listener fired for topics addMessageInAConversation to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:24,288] INFO [Controller id=0] Starting topic deletion for topics addMessageInAConversation (kafka.controller.KafkaController)
[2020-04-02 20:29:24,290] INFO [Topic Deletion Manager 0], Handling deletion for topics addMessageInAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:24,294] INFO [Topic Deletion Manager 0], Deletion of topic addMessageInAConversation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:24,295] INFO [Topic Deletion Manager 0], Topic deletion callback for addMessageInAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:24,298] INFO [Topic Deletion Manager 0], Partition deletion callback for addMessageInAConversation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:24,313] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:24,313] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:24,315] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:24,316] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:24,316] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:24,345] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4860f76c (kafka.controller.KafkaController)
[2020-04-02 20:29:24,348] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=addMessageInAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:24,349] INFO [Topic Deletion Manager 0], Handling deletion for topics addMessageInAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:24,370] INFO [Topic Deletion Manager 0], Deletion of topic addMessageInAConversation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:24,372] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:24,374] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:25,887] DEBUG [Controller id=0] Delete topics listener fired for topics applyForJob to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:25,887] INFO [Controller id=0] Starting topic deletion for topics applyForJob (kafka.controller.KafkaController)
[2020-04-02 20:29:25,888] INFO [Topic Deletion Manager 0], Handling deletion for topics applyForJob (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:25,888] INFO [Topic Deletion Manager 0], Deletion of topic applyForJob (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:25,888] INFO [Topic Deletion Manager 0], Topic deletion callback for applyForJob (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:25,889] INFO [Topic Deletion Manager 0], Partition deletion callback for applyForJob-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:25,892] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:25,892] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:25,892] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:25,892] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:25,892] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:25,907] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4b38150c (kafka.controller.KafkaController)
[2020-04-02 20:29:25,907] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=applyForJob,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:25,907] INFO [Topic Deletion Manager 0], Handling deletion for topics applyForJob (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:25,915] INFO [Topic Deletion Manager 0], Deletion of topic applyForJob successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:25,916] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:25,916] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:27,448] DEBUG [Controller id=0] Delete topics listener fired for topics createEducation to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:27,448] INFO [Controller id=0] Starting topic deletion for topics createEducation (kafka.controller.KafkaController)
[2020-04-02 20:29:27,448] INFO [Topic Deletion Manager 0], Handling deletion for topics createEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:27,448] INFO [Topic Deletion Manager 0], Deletion of topic createEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:27,448] INFO [Topic Deletion Manager 0], Topic deletion callback for createEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:27,449] INFO [Topic Deletion Manager 0], Partition deletion callback for createEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:27,452] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:27,452] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:27,452] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:27,452] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:27,452] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:27,468] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@623a1abc (kafka.controller.KafkaController)
[2020-04-02 20:29:27,468] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:27,468] INFO [Topic Deletion Manager 0], Handling deletion for topics createEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:27,474] INFO [Topic Deletion Manager 0], Deletion of topic createEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:27,475] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:27,476] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:28,981] DEBUG [Controller id=0] Delete topics listener fired for topics createEvent to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:28,981] INFO [Controller id=0] Starting topic deletion for topics createEvent (kafka.controller.KafkaController)
[2020-04-02 20:29:28,981] INFO [Topic Deletion Manager 0], Handling deletion for topics createEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:28,981] INFO [Topic Deletion Manager 0], Deletion of topic createEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:28,981] INFO [Topic Deletion Manager 0], Topic deletion callback for createEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:28,982] INFO [Topic Deletion Manager 0], Partition deletion callback for createEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:28,985] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:28,985] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:28,985] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:28,986] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:28,986] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:29,003] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4e768e39 (kafka.controller.KafkaController)
[2020-04-02 20:29:29,003] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:29,003] INFO [Topic Deletion Manager 0], Handling deletion for topics createEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:29,009] INFO [Topic Deletion Manager 0], Deletion of topic createEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:29,009] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:29,010] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:30,578] DEBUG [Controller id=0] Delete topics listener fired for topics createJobPost to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:30,578] INFO [Controller id=0] Starting topic deletion for topics createJobPost (kafka.controller.KafkaController)
[2020-04-02 20:29:30,578] INFO [Topic Deletion Manager 0], Handling deletion for topics createJobPost (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:30,578] INFO [Topic Deletion Manager 0], Deletion of topic createJobPost (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:30,578] INFO [Topic Deletion Manager 0], Topic deletion callback for createJobPost (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:30,579] INFO [Topic Deletion Manager 0], Partition deletion callback for createJobPost-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:30,584] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:30,584] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:30,584] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:30,584] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:30,584] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:30,600] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@711f74f2 (kafka.controller.KafkaController)
[2020-04-02 20:29:30,601] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createJobPost,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:30,601] INFO [Topic Deletion Manager 0], Handling deletion for topics createJobPost (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:30,607] INFO [Topic Deletion Manager 0], Deletion of topic createJobPost successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:30,608] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:30,609] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:32,144] DEBUG [Controller id=0] Delete topics listener fired for topics createProfessionalExperience to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:32,145] INFO [Controller id=0] Starting topic deletion for topics createProfessionalExperience (kafka.controller.KafkaController)
[2020-04-02 20:29:32,145] INFO [Topic Deletion Manager 0], Handling deletion for topics createProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:32,145] INFO [Topic Deletion Manager 0], Deletion of topic createProfessionalExperience (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:32,145] INFO [Topic Deletion Manager 0], Topic deletion callback for createProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:32,145] INFO [Topic Deletion Manager 0], Partition deletion callback for createProfessionalExperience-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:32,149] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:32,149] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:32,149] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:32,149] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:32,149] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:32,166] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@7a849fa8 (kafka.controller.KafkaController)
[2020-04-02 20:29:32,166] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=createProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:32,166] INFO [Topic Deletion Manager 0], Handling deletion for topics createProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:32,174] INFO [Topic Deletion Manager 0], Deletion of topic createProfessionalExperience successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:32,175] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:32,176] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:33,716] DEBUG [Controller id=0] Delete topics listener fired for topics deleteEducation to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:33,716] INFO [Controller id=0] Starting topic deletion for topics deleteEducation (kafka.controller.KafkaController)
[2020-04-02 20:29:33,716] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:33,717] INFO [Topic Deletion Manager 0], Deletion of topic deleteEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:33,717] INFO [Topic Deletion Manager 0], Topic deletion callback for deleteEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:33,717] INFO [Topic Deletion Manager 0], Partition deletion callback for deleteEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:33,720] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:33,720] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:33,720] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:33,720] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:33,720] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:33,735] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@485985be (kafka.controller.KafkaController)
[2020-04-02 20:29:33,735] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=deleteEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:33,735] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:33,741] INFO [Topic Deletion Manager 0], Deletion of topic deleteEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:33,742] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:33,742] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:35,288] DEBUG [Controller id=0] Delete topics listener fired for topics deleteProfessionalExperience to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:35,288] INFO [Controller id=0] Starting topic deletion for topics deleteProfessionalExperience (kafka.controller.KafkaController)
[2020-04-02 20:29:35,288] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:35,288] INFO [Topic Deletion Manager 0], Deletion of topic deleteProfessionalExperience (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:35,288] INFO [Topic Deletion Manager 0], Topic deletion callback for deleteProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:35,289] INFO [Topic Deletion Manager 0], Partition deletion callback for deleteProfessionalExperience-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:35,291] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:35,291] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:35,291] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:35,292] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:35,292] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:35,304] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@3224cdca (kafka.controller.KafkaController)
[2020-04-02 20:29:35,305] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=deleteProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:35,305] INFO [Topic Deletion Manager 0], Handling deletion for topics deleteProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:35,311] INFO [Topic Deletion Manager 0], Deletion of topic deleteProfessionalExperience successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:35,312] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:35,312] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:36,863] DEBUG [Controller id=0] Delete topics listener fired for topics getAllConversationsOfAUser to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:36,863] INFO [Controller id=0] Starting topic deletion for topics getAllConversationsOfAUser (kafka.controller.KafkaController)
[2020-04-02 20:29:36,863] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllConversationsOfAUser (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:36,863] INFO [Topic Deletion Manager 0], Deletion of topic getAllConversationsOfAUser (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:36,864] INFO [Topic Deletion Manager 0], Topic deletion callback for getAllConversationsOfAUser (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:36,864] INFO [Topic Deletion Manager 0], Partition deletion callback for getAllConversationsOfAUser-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:36,868] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:36,868] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:36,868] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:36,868] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:36,868] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:36,881] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@38169798 (kafka.controller.KafkaController)
[2020-04-02 20:29:36,881] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getAllConversationsOfAUser,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:36,881] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllConversationsOfAUser (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:36,889] INFO [Topic Deletion Manager 0], Deletion of topic getAllConversationsOfAUser successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:36,889] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:36,890] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:38,407] DEBUG [Controller id=0] Delete topics listener fired for topics getAllMessageOFAConversation to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:38,407] INFO [Controller id=0] Starting topic deletion for topics getAllMessageOFAConversation (kafka.controller.KafkaController)
[2020-04-02 20:29:38,407] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllMessageOFAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:38,407] INFO [Topic Deletion Manager 0], Deletion of topic getAllMessageOFAConversation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:38,407] INFO [Topic Deletion Manager 0], Topic deletion callback for getAllMessageOFAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:38,408] INFO [Topic Deletion Manager 0], Partition deletion callback for getAllMessageOFAConversation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:38,413] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:38,413] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:38,413] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:38,413] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:38,413] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:38,426] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@663126ed (kafka.controller.KafkaController)
[2020-04-02 20:29:38,426] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getAllMessageOFAConversation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:38,427] INFO [Topic Deletion Manager 0], Handling deletion for topics getAllMessageOFAConversation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:38,434] INFO [Topic Deletion Manager 0], Deletion of topic getAllMessageOFAConversation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:38,435] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:38,436] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:39,985] DEBUG [Controller id=0] Delete topics listener fired for topics getAppliedJobs to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:39,985] INFO [Controller id=0] Starting topic deletion for topics getAppliedJobs (kafka.controller.KafkaController)
[2020-04-02 20:29:39,985] INFO [Topic Deletion Manager 0], Handling deletion for topics getAppliedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:39,986] INFO [Topic Deletion Manager 0], Deletion of topic getAppliedJobs (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:39,986] INFO [Topic Deletion Manager 0], Topic deletion callback for getAppliedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:39,986] INFO [Topic Deletion Manager 0], Partition deletion callback for getAppliedJobs-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:39,990] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:39,990] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:39,990] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:39,990] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:39,990] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:40,006] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@62c13be0 (kafka.controller.KafkaController)
[2020-04-02 20:29:40,006] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getAppliedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:40,006] INFO [Topic Deletion Manager 0], Handling deletion for topics getAppliedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:40,013] INFO [Topic Deletion Manager 0], Deletion of topic getAppliedJobs successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:40,013] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:40,014] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:41,572] DEBUG [Controller id=0] Delete topics listener fired for topics getCompanyInfo to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:41,573] INFO [Controller id=0] Starting topic deletion for topics getCompanyInfo (kafka.controller.KafkaController)
[2020-04-02 20:29:41,573] INFO [Topic Deletion Manager 0], Handling deletion for topics getCompanyInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:41,573] INFO [Topic Deletion Manager 0], Deletion of topic getCompanyInfo (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:41,573] INFO [Topic Deletion Manager 0], Topic deletion callback for getCompanyInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:41,573] INFO [Topic Deletion Manager 0], Partition deletion callback for getCompanyInfo-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:41,576] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:41,576] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:41,576] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:41,576] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:41,576] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:41,590] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@769fe0ef (kafka.controller.KafkaController)
[2020-04-02 20:29:41,590] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getCompanyInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:41,590] INFO [Topic Deletion Manager 0], Handling deletion for topics getCompanyInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:41,596] INFO [Topic Deletion Manager 0], Deletion of topic getCompanyInfo successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:41,597] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:41,597] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:43,149] DEBUG [Controller id=0] Delete topics listener fired for topics getPostedJobs to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:43,149] INFO [Controller id=0] Starting topic deletion for topics getPostedJobs (kafka.controller.KafkaController)
[2020-04-02 20:29:43,149] INFO [Topic Deletion Manager 0], Handling deletion for topics getPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:43,149] INFO [Topic Deletion Manager 0], Deletion of topic getPostedJobs (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:43,149] INFO [Topic Deletion Manager 0], Topic deletion callback for getPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:43,150] INFO [Topic Deletion Manager 0], Partition deletion callback for getPostedJobs-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:43,153] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:43,154] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:43,154] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:43,154] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:43,154] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:43,165] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@7a3913f3 (kafka.controller.KafkaController)
[2020-04-02 20:29:43,165] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:43,166] INFO [Topic Deletion Manager 0], Handling deletion for topics getPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:43,173] INFO [Topic Deletion Manager 0], Deletion of topic getPostedJobs successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:43,173] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:43,174] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:44,774] DEBUG [Controller id=0] Delete topics listener fired for topics getRegisteredEvents to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:44,774] INFO [Controller id=0] Starting topic deletion for topics getRegisteredEvents (kafka.controller.KafkaController)
[2020-04-02 20:29:44,774] INFO [Topic Deletion Manager 0], Handling deletion for topics getRegisteredEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:44,774] INFO [Topic Deletion Manager 0], Deletion of topic getRegisteredEvents (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:44,774] INFO [Topic Deletion Manager 0], Topic deletion callback for getRegisteredEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:44,775] INFO [Topic Deletion Manager 0], Partition deletion callback for getRegisteredEvents-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:44,777] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:44,777] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:44,777] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:44,777] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:44,777] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:44,793] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@15505417 (kafka.controller.KafkaController)
[2020-04-02 20:29:44,793] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getRegisteredEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:44,793] INFO [Topic Deletion Manager 0], Handling deletion for topics getRegisteredEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:44,801] INFO [Topic Deletion Manager 0], Deletion of topic getRegisteredEvents successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:44,802] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:44,803] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:46,379] DEBUG [Controller id=0] Delete topics listener fired for topics getSearchedEvent to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:46,379] INFO [Controller id=0] Starting topic deletion for topics getSearchedEvent (kafka.controller.KafkaController)
[2020-04-02 20:29:46,379] INFO [Topic Deletion Manager 0], Handling deletion for topics getSearchedEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:46,379] INFO [Topic Deletion Manager 0], Deletion of topic getSearchedEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:46,380] INFO [Topic Deletion Manager 0], Topic deletion callback for getSearchedEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:46,380] INFO [Topic Deletion Manager 0], Partition deletion callback for getSearchedEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:46,384] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:46,384] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:46,385] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:46,385] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:46,385] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:46,398] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@7e257366 (kafka.controller.KafkaController)
[2020-04-02 20:29:46,398] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getSearchedEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:46,399] INFO [Topic Deletion Manager 0], Handling deletion for topics getSearchedEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:46,406] INFO [Topic Deletion Manager 0], Deletion of topic getSearchedEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:46,408] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:46,410] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:47,941] DEBUG [Controller id=0] Delete topics listener fired for topics getStudentAllEducation to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:47,941] INFO [Controller id=0] Starting topic deletion for topics getStudentAllEducation (kafka.controller.KafkaController)
[2020-04-02 20:29:47,941] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentAllEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:47,941] INFO [Topic Deletion Manager 0], Deletion of topic getStudentAllEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:47,941] INFO [Topic Deletion Manager 0], Topic deletion callback for getStudentAllEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:47,941] INFO [Topic Deletion Manager 0], Partition deletion callback for getStudentAllEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:47,944] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:47,945] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:47,945] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:47,945] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:47,945] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:47,958] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@77347cd5 (kafka.controller.KafkaController)
[2020-04-02 20:29:47,958] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getStudentAllEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:47,959] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentAllEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:47,966] INFO [Topic Deletion Manager 0], Deletion of topic getStudentAllEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:47,966] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:47,967] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:49,523] DEBUG [Controller id=0] Delete topics listener fired for topics getStudentInfo to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:49,523] INFO [Controller id=0] Starting topic deletion for topics getStudentInfo (kafka.controller.KafkaController)
[2020-04-02 20:29:49,523] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:49,523] INFO [Topic Deletion Manager 0], Deletion of topic getStudentInfo (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:49,523] INFO [Topic Deletion Manager 0], Topic deletion callback for getStudentInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:49,524] INFO [Topic Deletion Manager 0], Partition deletion callback for getStudentInfo-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:49,527] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:49,527] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:49,527] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:49,528] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:49,528] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:49,541] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@45204f4b (kafka.controller.KafkaController)
[2020-04-02 20:29:49,542] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getStudentInfo,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:49,542] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentInfo (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:49,549] INFO [Topic Deletion Manager 0], Deletion of topic getStudentInfo successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:49,549] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:49,550] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:51,080] DEBUG [Controller id=0] Delete topics listener fired for topics getStudentsRegisteredInAEvent to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:51,080] INFO [Controller id=0] Starting topic deletion for topics getStudentsRegisteredInAEvent (kafka.controller.KafkaController)
[2020-04-02 20:29:51,081] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentsRegisteredInAEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:51,081] INFO [Topic Deletion Manager 0], Deletion of topic getStudentsRegisteredInAEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:51,081] INFO [Topic Deletion Manager 0], Topic deletion callback for getStudentsRegisteredInAEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:51,081] INFO [Topic Deletion Manager 0], Partition deletion callback for getStudentsRegisteredInAEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:51,084] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:51,084] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:51,084] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:51,085] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:51,085] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:51,099] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@52475b14 (kafka.controller.KafkaController)
[2020-04-02 20:29:51,099] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getStudentsRegisteredInAEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:51,099] INFO [Topic Deletion Manager 0], Handling deletion for topics getStudentsRegisteredInAEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:51,106] INFO [Topic Deletion Manager 0], Deletion of topic getStudentsRegisteredInAEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:51,107] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:51,108] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:52,649] DEBUG [Controller id=0] Delete topics listener fired for topics listCompanyCreatedEvents to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:52,649] INFO [Controller id=0] Starting topic deletion for topics listCompanyCreatedEvents (kafka.controller.KafkaController)
[2020-04-02 20:29:52,649] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyCreatedEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:52,649] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyCreatedEvents (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:52,649] INFO [Topic Deletion Manager 0], Topic deletion callback for listCompanyCreatedEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:52,650] INFO [Topic Deletion Manager 0], Partition deletion callback for listCompanyCreatedEvents-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:52,652] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:52,653] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:52,653] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:52,653] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:52,653] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:52,668] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@7acbc79 (kafka.controller.KafkaController)
[2020-04-02 20:29:52,668] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=listCompanyCreatedEvents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:52,668] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyCreatedEvents (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:52,676] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyCreatedEvents successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:52,677] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:52,678] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:54,243] DEBUG [Controller id=0] Delete topics listener fired for topics listCompanyPostedJobs to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:54,243] INFO [Controller id=0] Starting topic deletion for topics listCompanyPostedJobs (kafka.controller.KafkaController)
[2020-04-02 20:29:54,243] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:54,243] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyPostedJobs (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:54,243] INFO [Topic Deletion Manager 0], Topic deletion callback for listCompanyPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:54,244] INFO [Topic Deletion Manager 0], Partition deletion callback for listCompanyPostedJobs-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:54,246] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:54,246] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:54,246] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:54,247] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:54,247] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:54,258] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@532aaa8d (kafka.controller.KafkaController)
[2020-04-02 20:29:54,258] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=listCompanyPostedJobs,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:54,258] INFO [Topic Deletion Manager 0], Handling deletion for topics listCompanyPostedJobs (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:54,265] INFO [Topic Deletion Manager 0], Deletion of topic listCompanyPostedJobs successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:54,266] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:54,266] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:55,830] DEBUG [Controller id=0] Delete topics listener fired for topics login to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:55,830] INFO [Controller id=0] Starting topic deletion for topics login (kafka.controller.KafkaController)
[2020-04-02 20:29:55,830] INFO [Topic Deletion Manager 0], Handling deletion for topics login (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:55,830] INFO [Topic Deletion Manager 0], Deletion of topic login (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:55,830] INFO [Topic Deletion Manager 0], Topic deletion callback for login (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:55,830] INFO [Topic Deletion Manager 0], Partition deletion callback for login-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:55,833] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:55,833] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=login,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:55,833] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=login,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:55,833] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=login,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:55,833] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:55,845] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@1437fdb4 (kafka.controller.KafkaController)
[2020-04-02 20:29:55,845] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=login,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:55,845] INFO [Topic Deletion Manager 0], Handling deletion for topics login (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:55,851] INFO [Topic Deletion Manager 0], Deletion of topic login successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:55,851] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:55,852] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:57,394] DEBUG [Controller id=0] Delete topics listener fired for topics passport to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:57,395] INFO [Controller id=0] Starting topic deletion for topics passport (kafka.controller.KafkaController)
[2020-04-02 20:29:57,395] INFO [Topic Deletion Manager 0], Handling deletion for topics passport (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:57,395] INFO [Topic Deletion Manager 0], Deletion of topic passport (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:57,395] INFO [Topic Deletion Manager 0], Topic deletion callback for passport (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:57,395] INFO [Topic Deletion Manager 0], Partition deletion callback for passport-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:57,399] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:57,400] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=passport,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:57,400] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=passport,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:57,400] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=passport,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:57,400] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:57,412] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@7c408bdd (kafka.controller.KafkaController)
[2020-04-02 20:29:57,412] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=passport,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:57,412] INFO [Topic Deletion Manager 0], Handling deletion for topics passport (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:57,419] INFO [Topic Deletion Manager 0], Deletion of topic passport successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:57,420] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:57,421] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:58,925] DEBUG [Controller id=0] Delete topics listener fired for topics registerForEvent to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:29:58,925] INFO [Controller id=0] Starting topic deletion for topics registerForEvent (kafka.controller.KafkaController)
[2020-04-02 20:29:58,925] INFO [Topic Deletion Manager 0], Handling deletion for topics registerForEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:58,925] INFO [Topic Deletion Manager 0], Deletion of topic registerForEvent (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:58,926] INFO [Topic Deletion Manager 0], Topic deletion callback for registerForEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:58,926] INFO [Topic Deletion Manager 0], Partition deletion callback for registerForEvent-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:58,934] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:58,934] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:58,934] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:58,935] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:58,935] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:29:58,946] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@1eedbf58 (kafka.controller.KafkaController)
[2020-04-02 20:29:58,946] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=registerForEvent,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:58,946] INFO [Topic Deletion Manager 0], Handling deletion for topics registerForEvent (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:58,951] INFO [Topic Deletion Manager 0], Deletion of topic registerForEvent successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:29:58,951] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:29:58,952] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:00,644] DEBUG [Controller id=0] Delete topics listener fired for topics response_topic to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:00,645] INFO [Controller id=0] Starting topic deletion for topics response_topic (kafka.controller.KafkaController)
[2020-04-02 20:30:00,645] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:00,645] INFO [Topic Deletion Manager 0], Deletion of topic response_topic (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:00,645] INFO [Topic Deletion Manager 0], Topic deletion callback for response_topic (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:00,646] INFO [Topic Deletion Manager 0], Partition deletion callback for response_topic-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:00,649] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:00,649] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:00,649] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:00,649] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:00,649] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:00,658] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@181510ca (kafka.controller.KafkaController)
[2020-04-02 20:30:00,658] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:00,658] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:00,665] INFO [Topic Deletion Manager 0], Deletion of topic response_topic successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:00,665] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:30:00,666] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:02,216] DEBUG [Controller id=0] Delete topics listener fired for topics searchStudents to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:02,216] INFO [Controller id=0] Starting topic deletion for topics searchStudents (kafka.controller.KafkaController)
[2020-04-02 20:30:02,216] INFO [Topic Deletion Manager 0], Handling deletion for topics searchStudents (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:02,216] INFO [Topic Deletion Manager 0], Deletion of topic searchStudents (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:02,216] INFO [Topic Deletion Manager 0], Topic deletion callback for searchStudents (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:02,216] INFO [Topic Deletion Manager 0], Partition deletion callback for searchStudents-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:02,218] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:02,218] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:02,218] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:02,219] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:02,219] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:02,228] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@33e49421 (kafka.controller.KafkaController)
[2020-04-02 20:30:02,228] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=searchStudents,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:02,229] INFO [Topic Deletion Manager 0], Handling deletion for topics searchStudents (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:02,235] INFO [Topic Deletion Manager 0], Deletion of topic searchStudents successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:02,236] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:30:02,237] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:03,757] DEBUG [Controller id=0] Delete topics listener fired for topics signup to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:03,757] INFO [Controller id=0] Starting topic deletion for topics signup (kafka.controller.KafkaController)
[2020-04-02 20:30:03,757] INFO [Topic Deletion Manager 0], Handling deletion for topics signup (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:03,757] INFO [Topic Deletion Manager 0], Deletion of topic signup (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:03,757] INFO [Topic Deletion Manager 0], Topic deletion callback for signup (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:03,757] INFO [Topic Deletion Manager 0], Partition deletion callback for signup-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:03,760] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:03,760] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=signup,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:03,760] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=signup,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:03,760] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=signup,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:03,760] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:03,771] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4b82efe3 (kafka.controller.KafkaController)
[2020-04-02 20:30:03,771] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=signup,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:03,771] INFO [Topic Deletion Manager 0], Handling deletion for topics signup (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:03,777] INFO [Topic Deletion Manager 0], Deletion of topic signup successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:03,778] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:30:03,779] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:05,315] DEBUG [Controller id=0] Delete topics listener fired for topics updateAppliedStudentJobStatus to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:05,315] INFO [Controller id=0] Starting topic deletion for topics updateAppliedStudentJobStatus (kafka.controller.KafkaController)
[2020-04-02 20:30:05,315] INFO [Topic Deletion Manager 0], Handling deletion for topics updateAppliedStudentJobStatus (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:05,315] INFO [Topic Deletion Manager 0], Deletion of topic updateAppliedStudentJobStatus (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:05,315] INFO [Topic Deletion Manager 0], Topic deletion callback for updateAppliedStudentJobStatus (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:05,315] INFO [Topic Deletion Manager 0], Partition deletion callback for updateAppliedStudentJobStatus-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:05,318] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:05,318] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:05,318] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:05,319] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:05,319] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:05,330] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@38668eb4 (kafka.controller.KafkaController)
[2020-04-02 20:30:05,330] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateAppliedStudentJobStatus,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:05,331] INFO [Topic Deletion Manager 0], Handling deletion for topics updateAppliedStudentJobStatus (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:05,339] INFO [Topic Deletion Manager 0], Deletion of topic updateAppliedStudentJobStatus successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:05,340] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:30:05,341] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:06,864] DEBUG [Controller id=0] Delete topics listener fired for topics updateCompanyProfile to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:06,864] INFO [Controller id=0] Starting topic deletion for topics updateCompanyProfile (kafka.controller.KafkaController)
[2020-04-02 20:30:06,864] INFO [Topic Deletion Manager 0], Handling deletion for topics updateCompanyProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:06,865] INFO [Topic Deletion Manager 0], Deletion of topic updateCompanyProfile (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:06,865] INFO [Topic Deletion Manager 0], Topic deletion callback for updateCompanyProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:06,865] INFO [Topic Deletion Manager 0], Partition deletion callback for updateCompanyProfile-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:06,868] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:06,868] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:06,868] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:06,868] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:06,868] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:06,878] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@8454a32 (kafka.controller.KafkaController)
[2020-04-02 20:30:06,878] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateCompanyProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:06,878] INFO [Topic Deletion Manager 0], Handling deletion for topics updateCompanyProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:06,889] INFO [Topic Deletion Manager 0], Deletion of topic updateCompanyProfile successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:06,889] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:30:06,890] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:08,415] DEBUG [Controller id=0] Delete topics listener fired for topics updateEducation to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:08,415] INFO [Controller id=0] Starting topic deletion for topics updateEducation (kafka.controller.KafkaController)
[2020-04-02 20:30:08,415] INFO [Topic Deletion Manager 0], Handling deletion for topics updateEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:08,416] INFO [Topic Deletion Manager 0], Deletion of topic updateEducation (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:08,416] INFO [Topic Deletion Manager 0], Topic deletion callback for updateEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:08,416] INFO [Topic Deletion Manager 0], Partition deletion callback for updateEducation-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:08,419] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:08,419] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:08,419] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:08,419] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:08,419] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:08,429] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@1f179287 (kafka.controller.KafkaController)
[2020-04-02 20:30:08,429] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateEducation,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:08,429] INFO [Topic Deletion Manager 0], Handling deletion for topics updateEducation (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:08,445] INFO [Topic Deletion Manager 0], Deletion of topic updateEducation successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:08,446] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:30:08,447] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:09,971] DEBUG [Controller id=0] Delete topics listener fired for topics updateProfessionalExperience to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:09,971] INFO [Controller id=0] Starting topic deletion for topics updateProfessionalExperience (kafka.controller.KafkaController)
[2020-04-02 20:30:09,972] INFO [Topic Deletion Manager 0], Handling deletion for topics updateProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:09,972] INFO [Topic Deletion Manager 0], Deletion of topic updateProfessionalExperience (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:09,972] INFO [Topic Deletion Manager 0], Topic deletion callback for updateProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:09,972] INFO [Topic Deletion Manager 0], Partition deletion callback for updateProfessionalExperience-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:09,974] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:09,974] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:09,974] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:09,975] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:09,975] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:09,984] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@43b69b71 (kafka.controller.KafkaController)
[2020-04-02 20:30:09,984] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateProfessionalExperience,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:09,984] INFO [Topic Deletion Manager 0], Handling deletion for topics updateProfessionalExperience (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:09,990] INFO [Topic Deletion Manager 0], Deletion of topic updateProfessionalExperience successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:09,991] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:30:09,991] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:11,542] DEBUG [Controller id=0] Delete topics listener fired for topics updateSkills to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:11,542] INFO [Controller id=0] Starting topic deletion for topics updateSkills (kafka.controller.KafkaController)
[2020-04-02 20:30:11,542] INFO [Topic Deletion Manager 0], Handling deletion for topics updateSkills (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:11,543] INFO [Topic Deletion Manager 0], Deletion of topic updateSkills (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:11,543] INFO [Topic Deletion Manager 0], Topic deletion callback for updateSkills (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:11,543] INFO [Topic Deletion Manager 0], Partition deletion callback for updateSkills-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:11,545] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:11,545] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:11,545] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:11,546] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:11,546] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:11,555] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4f29ae9d (kafka.controller.KafkaController)
[2020-04-02 20:30:11,555] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateSkills,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:11,555] INFO [Topic Deletion Manager 0], Handling deletion for topics updateSkills (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:11,562] INFO [Topic Deletion Manager 0], Deletion of topic updateSkills successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:11,562] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:30:11,563] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:13,096] DEBUG [Controller id=0] Delete topics listener fired for topics updateStudentProfile to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:13,096] INFO [Controller id=0] Starting topic deletion for topics updateStudentProfile (kafka.controller.KafkaController)
[2020-04-02 20:30:13,096] INFO [Topic Deletion Manager 0], Handling deletion for topics updateStudentProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:13,096] INFO [Topic Deletion Manager 0], Deletion of topic updateStudentProfile (re)started (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:13,096] INFO [Topic Deletion Manager 0], Topic deletion callback for updateStudentProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:13,096] INFO [Topic Deletion Manager 0], Partition deletion callback for updateStudentProfile-0 (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:13,099] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:13,099] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:13,099] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:13,099] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:13,099] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-02 20:30:13,106] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@6d1f7990 (kafka.controller.KafkaController)
[2020-04-02 20:30:13,106] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=updateStudentProfile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:13,106] INFO [Topic Deletion Manager 0], Handling deletion for topics updateStudentProfile (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:13,113] INFO [Topic Deletion Manager 0], Deletion of topic updateStudentProfile successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-02 20:30:13,113] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-02 20:30:13,114] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-02 20:30:26,444] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-02 20:30:26,444] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-02 20:31:43,997] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-04-02 20:31:43,997] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-04-02 20:31:43,997] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-04-02 20:31:43,999] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2020-04-02 20:31:44,659] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-02 20:31:44,659] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-02 20:31:44,659] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-02 20:31:44,660] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-04-02 20:31:44,661] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-02 20:31:44,664] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2020-04-02 20:31:44,665] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2020-04-02 20:31:44,665] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-02 20:31:44,665] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-02 20:31:44,665] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-02 20:31:44,666] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
